{"version":"1.0","items":[{"keywords":["DeveloperTools"],"summary":"","location":"https:\/\/levelup.gitconnected.com\/10-examples-why-curl-is-an-awesome-cli-tool-0b23223ec845","title":"10 Examples Why cURL is an Awesome CLI Tool | by Martin Heinz ","comments":"서버 연결이나 API 간단하게 테스트할 때 curl 종종 쓸 일이 있는데요. 편리한 옵션들이 많은데 막상 자주 쓰는 옵션은 아닌 경우도 많긴 합니다 "},{"summary":"\nFoodnoms는 5년 전에 시작한 영양 추적 앱입니다. 최근 2주 동안 진행된 가입 기기별 결제 벽(paywall) 실험 결과, 사용자 전환율이 크게 증가했습니다. 앱은 무료 플랜을 중심으로 성장해 왔지만, 수익 성장 속도는 느린 편이었습니다. 이에 창업자인 Ryan Ashcraft는 수익화와 성장에 집중하여 몇 가지 전략을 시도했습니다.\n\n그 중 하나는 결제 벽 최적화로, 새로운 디자인을 시도한 것입니다. 'Blinkist' 방식의 결제 벽을 도입하여 더 많은 사용자가 무료 체험을 시작할 수 있도록 했습니다. 이 새로운 디자인은 무료 체험에 쉽게 참여할 수 있도록 하여 체험 시작 비율을 증가시켰습니다. 실험 결과, 무료 체험 시작 비율은 58% 증가했고, 유료 전환율은 15.9% 감소했으나, 전체 결제 비율은 59.6% 증가했습니다. 결과적으로 사용자당 실현 수명 가치(LTV)는 23.3% 상승했습니다.\n\n기존 디자인에 비해 새로운 디자인은 보다 최적화된 것으로 평가되었고, 앞으로도 추가 최적화를 통해 더 나은 결과를 기대하고 있습니다. 이 실험을 통해 얻은 긍정적인 피드백은 다른 인디 앱 개발자들에게도 결제 벽 최적화의 중요성을 인식하게 할 좋은 사례로 작용할 것입니다.\n\n**키포인트:**\n1. Foodnoms \/ 영양 추적 앱\n2. 결제 벽(paywall) 최적화\n3. Blinkist 디자인\n4. 무료 체험 시작 비율 증가\n5. 사용자당 실현 수명 가치(LTV) 상승","comments":"Foodnoms라는 5년된 앱에서 결제를 기준으로 사용자 전환율을 개선하고 실험한 과정을 설명합니다. 국내외를 막론하고 앱 스토어에서 구독과 유료 결제를 유도하기 위한 사례들이 더 많아지면 좋겠습니다","location":"https:\/\/ryanashcraft.com\/paywall-optimization-success-story\/?","title":"A Paywall Optimization Success Story","keywords":["Culture","영어","pick"]},{"comments":"수학과 과학에서 사용하는 원주율 Pi와 중력가속도 g 상수값이 관련이 있는 이유에 대해 설명하는 글입니다. 이번주에 reddit에서 토론이 길어졌던 글 중에 하나라고 하네요. 누군가 언급처럼 진자 운동을 기준으로 미터를 정하고 계산한 것이 관련이 있어 보이긴 하네요.","location":"https:\/\/roitman.io\/blog\/91","summary":"","keywords":["Culture","영어"],"title":"A wonderful coincidence or an expected connection: why π² ≈ g."},{"keywords":["AI\/ML"],"location":"https:\/\/medium.com\/macoclock\/ai-comes-to-life-in-ios-18-1-apples-latest-innovations-fc1a440d3c3d","title":"AI Comes to Life in iOS 18.1: Apple's Latest Innovations | by Jacky ","summary":"","comments":"iOS 18.1 후기가 또 있네요. 아직은 아이폰 15 프로 계열에서 북미로 지역을 설정하고, 언어도 영어로만 한 상태에서 베타 사용자 신청을 해야 사용할 수 있습니다. 영어가 포함된 경우만 그런지 모르겠지만 한글로 된 긴 문자를 받았는데 한 줄로 요약해주기도 하더군요"},{"location":"https:\/\/medium.com\/codex\/ai-integration-in-xcode-creating-extensions-with-local-llms-072e8993372f","keywords":["DeveloperTools"],"title":"AI Integration in Xcode: Creating Extensions with Local LLMs | by Rohit Saini ","comments":"LMStudio 와 공개된 LLM 모델을 Xcode 플러그인으로 연결해서 주석을 읽어서 코드를 생성하는 방법을 설명합니다. 중간 중간 코드 조각이 이미지라서 보기에는 괜찮은데 따라해보려면 불편할 수 있을 것 같습니다. 맨 아래 코드 링크가 있다고 해서 들어가보니 저렴하게(?) 판매를 하는군요 ","summary":""},{"summary":"","location":"https:\/\/proandroiddev.com\/accessibility-considerations-with-stacked-cards-custom-layout-06f7fd8c1139","keywords":["Accessibility","pick"],"title":"Accessibility Considerations with Stacked Cards Custom Layout | by Eevis Panula ","comments":"카드처럼 뷰가 z축으로 쌓여있는 경우에도 접근성을 고려해서 보여주려면 어떻게 해야할까요. 흥미로운 고민거리인 것 같네요. "},{"keywords":["Design"],"comments":"새로운 컴포넌트를 만들어서 써야하는 경우가 있겠지만 시스템 컴포넌트를 사용하는 것만으로 가질 수 있는 장점에 대해 이야기합니다. 이런 장점을 유지하면서 커스텀 컨트롤들을 만들 수 있는게 중요한 역량이 아닐까 싶네요 (현실은 바빠서 못하는 경우도 많지만요)","summary":"","location":"https:\/\/www.avanderlee.com\/optimization\/app-design-5-benefits-of-using-system-components\/?","title":"App design: 5 benefits of using system components"},{"summary":"","keywords":["APPLE"],"location":"https:\/\/www.apple.com\/kr\/newsroom\/2024\/08\/apple-reports-third-quarter-results\/","comments":"역시 애플 걱정은 할 필요가 없겠군요!","title":"Apple, 3분기 실적 발표 - Apple (KR)"},{"location":"https:\/\/itnext.io\/are-you-scared-of-deploying-on-fridays-8f1f451b7f77","comments":"재밌는 제목이라서 끌렸습니다. 금요일에 `배포하는` 것이 위험한 걸까요? `금요일에` 배포하는 것이 위험한 걸까요 ㅎㅎ 운영 관점에서도 주말이나 휴일이 끼어있으면 다른 경우가 있죠","summary":"","keywords":["Culture"],"title":"Are you scared of deploying on Fridays? | by Raphael Yoshiga "},{"summary":"","keywords":["SwiftUI"],"title":"Build Android and iOS Apps with SwiftUI: A Comprehensive Guide. | by Ashish Jain ","comments":"(아마도 안드로이드 개발자가 없어서) iOS 개발자가 안드로이드 앱을 개발해야 할 때 SwiftUI로 구현해서 크로스 컴파일로 배포하기 위한 과정을 설명합니다. 그럼에도 이런 사례가 많아지는 게 좋은것인가 의문을 갖게 됩니다 ㅎㅎ","location":"https:\/\/ashishjain-95034.medium.com\/build-android-and-ios-apps-with-swiftui-a-comprehensive-guide-f1dbbf3e6a28"},{"location":"https:\/\/medium.com\/theymakedesign\/application-design-ideas-vol-239-bbb290aae5ed","comments":"","summary":"","keywords":["Design"],"title":"Clear and Tech Application Design Ideas | TMDesign"},{"title":"Common Misconceptions About SwiftUI | Fatbobman","comments":"애플은 주로 장점만 이야기하는 경향이 있어서 SwiftUI에 대한 오해를 하는 경우가 꽤 있죠. 저도 글에 나온 것처럼 SwiftUI에 대한 오해가 꽤 있다고 보고 동의합니다. 오히려 SwiftUI가 학습하기에도 제대로 구현하기에도 더 어렵다고 생각하니까요","summary":"SwiftUI는 Apple이 크게 홍보하는 선언적 프레임워크로, 기존의 UIKit\/AppKit과는 설계 철학이 크게 다릅니다. 이 프레임워크는 다른 선언적 프레임워크와 비교해도 독특한 기능과 동작 방식을 보입니다. 여러 SwiftUI 개발자와의 대화에서 많은 개발자들이 SwiftUI를 오해하고 있으며, 이는 SwiftUI의 본질을 깊이 이해하는 데 장애가 될 수 있음을 발견했습니다.\n\n이 글은 SwiftUI의 몇 가지 일반적인 오해를 탐구해 개발자들이 SwiftUI를 더 잘 이해하고 활용할 수 있도록 하는 것을 목표로 합니다. SwiftUI의 학습 난이도, 크로스 플랫폼 개발에 대한 기대, 프레임워크의 기능 범위, 코드의 양 등에 대한 오해를 설명하고 이를 명확히 함으로써, SwiftUI 개발자에게 학습 방향과 사용 전략을 제시합니다.\n\n또한 SwiftUI 학습 곡선이 고르지 않으며, 처음에는 쉽게 보이지만 마스터하기는 어렵다는 점을 강조합니다. 개발자는 SwiftUI의 기초를 넘어서 레이아웃 논리와 내부 메커니즘 등을 깊이 이해해야 합니다.\n\nSwiftUI의 \"한 번 작성하면 어디서나 실행\"이라는 슬로건은 \"한 번 배우면 어디서나 적용\"이라는 Apple의 철학을 반영합니다. 이는 개발자가 다양한 플랫폼의 하드웨어 특성과 사용자 습관에 맞게 최적의 사용자 경험을 제공하는 데 초점을 맞추고 있음을 의미합니다.\n\nSwiftUI는 단순한 UI 프레임워크 그 이상으로, Swift 언어의 현대적인 동시성 모델, Swift 패키지 관리자(SPM) 활용 능력, 더 오래된 시스템 지원을 위한 Combine 프레임워크 등의 지식을 필요로 합니다. 또한 SwiftUI는 코드의 양보다는 효율성, 안정성, 확장 가능성을 중시합니다.\n\n마지막으로, SwiftUI의 본질을 재정립하고 이를 통해 더 나은 품질의 애플리케이션을 만드는 방법을 논의합니다. 개발자들이 SwiftUI의 잠재력을 최대한 활용할 수 있도록 이해를 조정하고 기대치를 맞춤으로써 개발 경험을 향상시키는 것이 목적입니다.\n\n**키워드:**\n1. SwiftUI 오해\n2. 크로스 플랫폼\n3. 학습 난이도\n4. 선언적 프레임워크\n5. 새로운 개발 패러다임","keywords":["SwiftUI"],"location":"https:\/\/fatbobman.com\/en\/posts\/common-misconceptions-about-swiftui\/?"},{"location":"https:\/\/nilcoalescing.com\/blog\/CountTheNumberOfObjectsThatPassATestInSwift\/?","title":"Count the number of objects that pass a test in Swift using count(where:)","comments":"`count(where:)` 조건에 맞는 개수를 알려주는 고차함수가 무척이나 쓸만해 보입니다 ","keywords":["Swift","영어"],"summary":""},{"summary":"","keywords":["Design"],"location":"https:\/\/medium.com\/theymakedesign\/user-interface-design-ideas-vol-169-8e540bea966c","title":"Data-driven and Seamless User Interface Design Ideas | TMDesign","comments":""},{"title":"Embedded Swift Tutorial - Getting Started (Everything you need to know)","location":"https:\/\/blog.supereasyapps.com\/embedded-swift-tutorial-getting-started-everything-you-need-to-know\/?","keywords":["Hardware","영어"],"summary":"","comments":"오호 ESP32 컨트롤러 개발 환경이 좀 귀찮은 게 사실인데요. 임베디드 개발에서도 Swift를 본격 사용해볼 수 있겠네요. 저도 올해중에는 꼭 도전해봐야겠습니다 "},{"title":"Emerge Tools Blog | Async await in Swift","comments":"스위프트 동시성 관련해서 전체 도구들 - 문법 요소를 하나씩 설명해주는 좋은 글입니다. 특히 비동기 처리를 하기 때문에 문법과 이론적인 내용과 함께 꼭 동작하는 코드와 상황들을 살펴봐야 하더군요.","location":"https:\/\/www.emergetools.com\/blog\/posts\/swift-async-await-the-full-toolkit","summary":"","keywords":["Swift","pick"]},{"summary":"","keywords":["Design"],"location":"https:\/\/medium.com\/theymakedesign\/augmented-reality-ux-ce2bdfe1ca36","comments":"","title":"Examples | TMDesign"},{"keywords":["Culture","영어"],"summary":"","title":"Existential thoughts about Apple’s reliance on Services revenue – Six Colors","location":"https:\/\/sixcolors.com\/post\/2024\/08\/existential-thoughts-about-apples-reliance-on-services-revenue\/?","comments":"애플이 실적을 발표할 때마다 서비스 매출이 늘어나고 있습니다. 전통적으로 웹 서비스를 잘 못만드는 경향이 있었지만 이제는 서비스 매출이 아이폰 매출 절반이 넘었고 그렇게 커져만 가는 서비스 매출을 우려스럽게 보는 분들도 계십니다"},{"title":"Exploring OpenAI: Creating a Proxy with AIProxy for iOS and macOS Apps","comments":"AI 도구들이 많아지면서 API 키를 넣고 사용해야 하는 경우가 많아지고 있는데요, AIProxy 라고 키를 절반씩 나눠서 안전하게 엔드포인트에서 처리하도록 돕는 방식에 대해 설명합니다. 그런 AIProxy를 iOS나 macOS에서 사용하는 방식도 설명합니다","keywords":["AI\/ML","영어"],"summary":"","location":"https:\/\/www.rudrank.com\/exploring-openai-creating-a-proxy-with-aiproxy\/?"},{"location":"https:\/\/medium.com\/theymakedesign\/branding-design-inspiration-vol-301-8f7cde048879","title":"Flat and Professional Branding Works | TMDesign","summary":"","comments":"","keywords":["Design"]},{"location":"https:\/\/canartuc.medium.com\/from-apple-macos-to-linux-operating-system-a5b7d34447a8","keywords":["Culture"],"comments":"맥을 쓰다가 리눅스로 전환을 하고 싶은 사람들에게 아주 상세한 설명을 남겨주고 있습니다. 요즘은 리눅스 데스크톱도 사용성이 많이 좋아지고 드라이버도 많아져서 또 다른 선택지로 나쁘지 않은 것 같습니다","title":"From Apple macOS to Linux: Operating System | by Can Artuc ","summary":"이 글은 애플의 macOS에서 리눅스 운영체제로 전환하려는 사용자들을 대상으로 한 가이드입니다. 필자는 리눅스의 다양한 배포판 선택이 중요하며, 이를 통해 사용자가 자신의 필요와 취향에 맞는 리눅스 배포판을 찾을 수 있다고 강조합니다. 필자는 리눅스 배포판의 기초와 선택 방법, 그리고 다양한 배포판들 사이의 차이점을 설명하며, 새로운 사용자들이 리눅스를 시작할 때 참고할 수 있는 여러 자료를 제공합니다.\n\n가장 중요한 점은, 리눅스 환경에서 애플의 macOS와 달리 하나의 고정된 운영체제가 없다는 점입니다. 리눅스는 커널이라는 핵심으로 구성되어 있으며, 이 커널을 기반으로 다양한 배포판들이 존재합니다. 필자는 자주 사용되는 리눅스 배포판을 언급하며, 각 배포판의 강점과 특성을 비교합니다.\n\n글에서는 배포판 뿐만 아니라 데스크탑 환경의 선택도 중요함을 강조합니다. 예를 들어, 필자는 KDE와 GNOME을 비교하며, 각 데스크탑 환경의 장단점과 사용 사례를 설명합니다. 또한, 리눅스를 지원하는 랩탑 선택에 대한 조언도 포함되어 있으며, 필자 본인이 사용하는 레노보 랩탑에 대한 이유도 설명합니다.\n\n마지막으로, 필자는 리눅스 전환 과정에서 발생할 수 있는 문제점과 그 해결 방법을 제공하며, 리눅스 환경을 실험해볼 수 있는 라이브 버전 사용을 권장합니다. 글을 통해 독자들은 리눅스 환경을 더 이해하고, 자신에게 맞는 최적의 리눅스 배포판 및 데스크탑 환경을 선택할 수 있습니다.\n\n키포인트 키워드:\n1. 리눅스 배포판\n2. 데스크탑 환경\n3. 커널\n4. 랩탑 선택\n5. 라이브 버전 사용"},{"title":"Getting Started with the Improved TabView in iOS 18 | by Chase ","location":"https:\/\/medium.com\/@jpmtech\/getting-started-with-the-improved-tabview-in-ios-18-111974b70db9","comments":"UIKit에 TabBarController가 있었다면 SwiftUI에는 TabView가 있다고 할 수 있죠. visionOS부터 이런 스타일로 바뀌었는데 살짝 어색하지만 전체적으로 통일할 필요는 있어 보입니다","summary":"","keywords":["SwiftUI"]},{"location":"https:\/\/www.avanderlee.com\/general\/from-side-project-to-going-indie\/?","title":"Going Indie: From Side Project to Going Independent","comments":"인디 개발자로 살아가는 것은 어떤 길이 펼쳐질까요. 한동안 iOS 앱 스토어가 팽창할 때는 다양한 사례가 많았는데 이제 점차 드물어진 것 같습니다. swiftlee 정도면 그래도 꾸준히 가능하지 않을까요","keywords":["Culture","영어"],"summary":""},{"summary":"","comments":"앱 개발은 아니지만 아마존과 구글에서 CI\/CD를 바라보는 관점이 서로 다르다는 게 신기합니다. 통합 단계별로 다르게 조직적으로 움직이는 것에서 생각이 많아지는 글이라 가져왔습니다. ","keywords":["DeveloperTools"],"location":"https:\/\/carloarg02.medium.com\/how-amazon-and-google-view-ci-cd-in-an-entirely-different-way-824b9c36777e","title":"How Amazon and Google view CI\/CD in an entirely different way | by Carlos Arguelles "},{"keywords":["AI\/ML","Swift","ServerSide"],"comments":"레거시 코드를 대하는 자세나 마음가짐도 개발팀마다 다른 것 같습니다. 위대한 유산이 될 것이냐 버려야할 쓰레기가 될 것이냐 양분하지 않고 기준을 정하고 개선해 가는 미디엄 iOS 개발팀의 리팩터링 과정이 인상적입니다. ","location":"https:\/\/medium.engineering\/how-the-medium-ios-team-works-effectively-with-legacy-code-0a9ddc45df19","title":"How the Medium iOS team works effectively with legacy code | by Zouhair Mahieddine ","summary":""},{"keywords":["AI\/ML","Swift","SwiftUI"],"location":"https:\/\/stevenpcurtis.medium.com\/how-to-check-arc-counts-and-prevent-retain-cycles-in-swift-5a383f94061c","title":"How to Check ARC Counts and Prevent Retain Cycles in Swift | by Steven Curtis ","summary":"","comments":"스위프트에서 ARC가 동작해서 retain count가 숨겨져 있을 뿐 사라진 게 아니죠. ARC 동작을 이해하고 문제점을 찾아내거나 개선해야 할 때 기억해야 할 부분을 짚어줍니다"},{"title":"How to automatically detect memory leaks on CI\/CD using UI tests","comments":"UI 테스트 과정에서 메모리 누수를 찾는 방법에 대해 설명하고 CI\/CD에서 메모리 그래프 결과를 파싱하는 방법을 설명합니다","location":"https:\/\/www.polpiella.dev\/automatically-detect-memory-leaks-using-ui-tests\/?","summary":"","keywords":["DeveloperTools","Testing","영어"]},{"title":"Is Apple Intelligence... Intelligent? | by Carl St. James ","keywords":["AI\/ML"],"summary":"","location":"https:\/\/medium.com\/macoclock\/is-apple-intelligence-intelligent-58e0b9c13f97","comments":"iOS 18.1 개발자 베타가 공개되면서 애플 인텔리전스 기능을 일부 사용해볼 수 있습니다. 대부분 로컬에서 동작하기 때문에 비행기 모드에서도 동작이 된다고 하네요"},{"keywords":["Culture"],"comments":"애플 공식 트레이드-인 프로그램 사용해서 반납해보셨나요? 저는 2번 정도 해봤는데요 당근에 올리는 것보다는 저렴하지만 프로세스는 복잡하지 않은 편이었습니다. ","title":"My Old Apple Tech Just Saved Me Money. Cool. | by Michael Swengel ","summary":"","location":"https:\/\/medium.com\/macoclock\/my-old-apple-tech-just-saved-me-money-cool-3516620b27a0"},{"keywords":["Swift","영어"],"title":"Non-Sendable types are cool too you know | massicotte.org","summary":"","comments":"이제 스위프트 6를 맞이하기 위해서 `@sendable`과 `@isolated`를 좀 더 명확하게 이해해야 합니다. 더이상 미룰 수 없이 써야 하는 시점이 되어가니까요 ㅎㅎ","location":"https:\/\/www.massicotte.org\/non-sendable?"},{"title":"Performance Benchmarking: gRPC+Protobuf vs. HTTP+JSON | by Alex Pliutau ","summary":"","keywords":["Culture"],"comments":"직접적으로 iOS 관련 내용은 아니고 서버를 호출하는 과정을 비교한 글입니다. 생각해 볼 여지가 있는 것 같네요","location":"https:\/\/itnext.io\/performance-benchmarking-grpc-protobuf-vs-http-json-03913aa75cfc"},{"location":"https:\/\/medium.com\/theymakedesign\/dashboard-ui-design-ideas-vol-263-a5f650223982","comments":"","summary":"","keywords":["Design"],"title":"Plain and Unique Dashboard UI Design Ideas | TMDesign"},{"keywords":["DeveloperTools","영어"],"comments":"디버깅할 때 브레이크포인트에 조건을 넣을 수가 있는데 이런 경우 엄청 느려지기도 합니다. 앱에서 GRDB 데이터베이스를 포함해서 디버깅하는 과정에서 더 빠르게 하려고 했던 경험을 소개합니다. ","title":"Reminder: Conditional Breakpoints are Slow","location":"https:\/\/twocentstudios.com\/2024\/08\/08\/conditional-breakpoints\/?","summary":""},{"summary":"","comments":"포인트-프리는 이제 비공식 스위프트 라이브러리 개발팀 느낌이네요 ㅎㅎ 아이디어도 좋고 다양한 시도가 정말 최고인 것 같습니다. SwiftUI 뿐만 아니라 UIKit, AppKit 뿐만 아니라 다른 플랫폼에서도 내비게이션을 도와주는 라이브러리를 공개했습니다","location":"https:\/\/www.pointfree.co\/blog\/posts\/149-swift-navigation-powerful-navigation-tools-for-all-swift-platforms?","keywords":["OpenSources","영어"],"title":"Swift Navigation: Powerful navigation tools for all Swift platforms"},{"comments":"위에 동시성 글과 함께 읽어보면 좋을 글입니다. 샘플 코드가 조금더 친절합니다","location":"https:\/\/medium.com\/@bancarel.paul\/swift-concurrency-async-await-all-you-need-to-know-from-wwdc-21-to-23-9c7645408282","keywords":["Swift"],"title":"Swift concurrency: async\/await — All you need to know from WWDC 21 to 23 | by Paul Bancarel ","summary":""},{"title":"Swift-foundation now available - Related Projects \/ Foundation - Swift Forums","comments":"스위프트 포럼에 공지된 내용 중에 드디어 스위프로만 구현한 Foundation 라이브러리 swift-foundation 구현이 완료되서 Swift 6.0에 포함될 예정이라고 합니다. 물론 100% 완전히 다 넘어간 건 아니고 여전히 C 함수를 호출하거나 CoreFoundation을 호출하는 경우가 드물게 남아있다고 합니다.","location":"https:\/\/forums.swift.org\/t\/swift-foundation-now-available\/73530","keywords":["Swift","영어"],"summary":""},{"keywords":["Framework","영어"],"location":"https:\/\/useyourloaf.com\/blog\/swiftdata-indexes\/?","comments":"아주 짧은 글인데요 Core Data에서 인덱스 설정했던 것처럼 SwiftData에서도 인덱스를 추가할 수 있다고 합니다","title":"SwiftData Indexes","summary":""},{"comments":"","location":"https:\/\/levelup.gitconnected.com\/swiftui-working-with-path-get-all-points-and-tangents-2c7dbe9af6e2","summary":"","keywords":["SwiftUI"],"title":"SwiftUI: Working with Path: Get All Points and Tangents! | by Itsuki "},{"location":"https:\/\/jacobbartlett.substack.com\/p\/the-meme-that-gave-me-imposter-syndrome?","comments":"가면 증후군(임포스터 신드룸) 한 번쯤 들어보셨죠? 자신의 성공조차 주변의 실력 있는 사람들 사이에서 운으로 이루었다고 생각하며 느끼는 불안 심리를 말합니다. 개발팀에서도 그런 감정을 느낄 때가 가끔 있는데요 혼자서 고민하시기 보다는 주변에 다른 개발자들과 이야기 나눠보시는 게 어떨까 싶네요. 아참 글의 내용은 클로저 문법과 확장 때문에 그런 감정이 들었다는 얘깁니다 ㅎㅎ","keywords":["AI\/ML","영어"],"summary":"","title":"The Meme that gave me Imposter Syndrome - by Jacob Bartlett"},{"comments":"아이폰 이벤트 다음 이벤트는 M4 기반 맥북 프로, 맥미니, 아이맥이 아닐까 예측하는 루머입니다. macOS 업데이트와 함께 맞춰지지 않을까 예상해봅니다","summary":"","location":"https:\/\/medium.com\/macoclock\/the-power-of-apples-m4-redefining-mac-performance-7c44e15772d1","keywords":["Culture"],"title":"The Power of Apple’s M4, Redefining Mac Performance | by Jacky "},{"summary":"","title":"The best SwiftLint stack with a workaround of the baseline < 0.55.1 | by Christopher Saez ","location":"https:\/\/medium.com\/@SaezChristopher\/the-best-productive-swiftlint-stack-with-a-baseline-system-45b2892f84d7","keywords":["DeveloperTools"],"comments":"SwiftLint 프로젝트가 스위프트 초기 지원을 많이 하던 realm에서 주도했었는데 요즘은 조금 느리게 발전하는 것 같습니다. 일부 기능은 꺼놓고 쓸 수 밖에 없거나 CI\/CD 환경에 아쉬운 점도 있다는 글입니다."},{"comments":"이제 UTM SE 에뮬레이터 앱으로 이전 버전 Windows를 설치할 수 있습니다. Windows 11은 몇 가지 제약이 있었는데요 NTDEV라는 해외개발자가 Windows 11 Tiny 버전을 실행하는 데 성공했다고 합니다. 그 내용으로 이제 애플의 폐쇄성이 예전과는 달라졌다고 이야기합니다","summary":"","keywords":["Culture"],"location":"https:\/\/medium.com\/macoclock\/unbelievable-iphone-can-run-windows-now-fd2f2e73a2fb","title":"Unbelievable! iPhone Can Run Windows Now! | by Jacky "},{"comments":"본래 콘텐츠 크기에 맞춰서 보여줘야 하는 것은 당연하지만 내용에 따라 달라져야 한다면 레이아웃을 유연하게 구성해야 하는데 그게 꽤나 귀찮은 일이었습니다. SwiftUI는 모든 뷰가 이렇게 동작하지만 UIKit에서는 오토레이아웃을 적용하더라도 고민해볼 지점이 있으니까요","title":"Understanding Intrinsic Content Size in iOS Development | by Steven Curtis ","location":"https:\/\/stevenpcurtis.medium.com\/understanding-intrinsic-content-size-in-ios-development-d323ca19972a","summary":"","keywords":["UIKit","SwiftUI"]},{"location":"https:\/\/www.pointfree.co\/blog\/posts\/147-unobtrusive-and-testable-issue-reporting?","summary":"","comments":"Xcode에서 에러나 이슈로 표시하는 메시지를 다룰 수 있는 Issue Reporting 라이브러리를 공개했습니다. 내부를 살펴봤는데 Xcode 내부 함수를 호출하기도 해서 재밌네요 ㅎㅎ","keywords":["Testing","영어"],"title":"Unobtrusive and testable issue reporting"},{"location":"https:\/\/mobileappcircular.com\/useful-packages-to-improve-your-swiftui-development-workflow-2aa9cadbf3c8","keywords":["SwiftUI","OpenSources","pick"],"title":"Useful packages to improve your SwiftUI development workflow | by Mobile","comments":"SwiftUI 개발 워크플로우를 향상시켜주도록 도와주는 오픈소스 패키지를 소개합니다. 익숙한 lint나 fastlane도 포함되어 있고 라이센스 생성을 위한 AckGen도 눈에 띄네요","summary":""},{"title":"What We Still Don’t Understand About Machine Learning | Towards Data Science","location":"https:\/\/towardsdatascience.com\/what-we-still-dont-understand-about-machine-learning-699e0002a057","keywords":["AI\/ML"],"comments":"","summary":""},{"comments":"`askwwdc.com` 이라는 개인 개발자가 만든 WWDC 데이터 기반 채팅 서비스입니다. 제가 Xcode에 새롭게 들어간 code prediction에 대해 질문했더니 이렇게 답변해주네요. 좌측 상단에서 홈 버튼을 누르고 사용하시면 됩니다","summary":"","location":"https:\/\/askwwdc.com\/q\/3802","keywords":["Culture","영어"],"title":"how about code prediction for xcode? | Ask WWDC"},{"location":"https:\/\/medium.com\/macoclock\/macos-sequoia-public-beta-experience-it-truly-understands-the-working-individual-51ca0f726eab","keywords":["Culture"],"title":"macOS Sequoia Public Beta Experience: It Truly Understands the Working Individual | by Jacky ","summary":"","comments":"macOS 세콰이어 퍼블릭 베타 경험담입니다. 사용자 관점에서 와우 요소와 기대하는 점을 살 소개하고 있습니다. 이번 퍼블릭 베타는 개발자 베타와 크게 다르지 않고 버그도 적어서 나쁘지 않습니다."},{"summary":"","location":"https:\/\/medium.com\/@techhara\/x86-is-so-b3d9306ccbdf","title":"x86 is so 🔥 | by TechHara ","keywords":["Hardware"],"comments":"PC 시대를 이끌었던 인텔과 마이크로소프트가 뜨거운 x86 칩을 버리고 ARM으로 넘어가기 시작했다는 점을 주목합니다. 10년정도 지나면 정말 인텔 장비는 사라지는 걸까요 (인텔 주가는 무섭 ㅜㅜ)"}],"sequence":108,"releaseAt":743785200}