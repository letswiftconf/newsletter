{"version":"1.0","items":[{"location":"https:\/\/medium.com\/macoclock\/10-exciting-ai-features-reportedly-coming-to-ios-18-2274247f54ed","keywords":["Culture"],"comments":"특히 올해 iOS 18에 기대가 큰 모양입니다. AI를 Apple Intelligence라고 부를꺼라는 루머도 있습니다","title":"10 Exciting AI Features Reportedly Coming To iOS 18 | by The Useful Tech ","summary":""},{"comments":"애플 디자인 어워드 수상작이 공개됐습니다. P의 거짓이 수상작에 포함된 게 눈에 띄네요","summary":"","keywords":["APPLE"],"title":"2024 winners and finalists - Apple Design Awards - Apple Developer","location":"https:\/\/developer.apple.com\/design\/awards\/?"},{"location":"https:\/\/medium.com\/apple-virtual-reality-augmented-reality\/apples-2024-2025-mac-release-schedule-revealed-ed4c773d0a2e","summary":"","keywords":["Hardware"],"comments":"루머에 의하면 올해 말부터 내년초에 M4 칩을 탑재한 맥북들이 쏟아져 나올꺼라고 하네요. 팀장님 저 내년에 장비 바꿀 수 있나요!? ","title":"2025 Mac Release Schedule Revealed | by The Afronomist "},{"summary":"","comments":"드디어 오랜 Swift 5.x 를 끝내고 Swift 6와 함께 또 다른 변화가 생길 것 같습니다. 스위프트 라이브러리들도 같이 버전이 올라가야 하는 타이밍인데 과연 어떨려나요","location":"https:\/\/levelup.gitconnected.com\/anticipated-updates-to-swift-and-libraries-at-wwdc-2024-b4f2dab7c5a9","title":"Anticipated Updates to Swift and Libraries at WWDC 2024 | by Emin Emini ","keywords":["Swift"]},{"keywords":["Hardware"],"location":"https:\/\/medium.com\/macoclock\/apple-watch-ultra-2-a-3-month-runners-review-6ec89f65ae06","comments":"제 주변에서 100킬로 200킬로 달리기를 하시는 분들이 몇 분 계신데요. 그 분들은 더더더 오래가는 애플 워치 울트라를 기대하시더군요. 잠잘 때 추적하려면 울트라2가 더 좋을려나요","title":"Apple Watch Ultra 2: A Runner’s Perspective after 3-Months | by Aditya Darekar ","summary":""},{"comments":"이번 WWDC에서 애플은 어떤 인공지능 모델을 공개할 지 궁금해하고 있습니다. 이제 몇 시간 남지 않았네요","title":"Apple’s large model MM1 is entering the market | by Yaokun Lin ","keywords":["AI\/ML"],"summary":"","location":"https:\/\/machinelearningabc.medium.com\/apples-large-model-mm1-is-entering-the-market-30-billion-parameters-multi-modal-moe-613eb39de795"},{"summary":"","title":"Apps using Compose iOS (beta!) in 2024 — developer insights | Medium","location":"https:\/\/medium.com\/@jacobras\/apps-using-compose-multiplatform-on-ios-now-beta-in-2024-developer-insights-fe24b224d754","keywords":["Culture"],"comments":"올해 구글 I\/O에서 KMP 코틀린 멀티 플랫폼과 CMP 콤포즈 멀티 플랫폼으로 iOS 앱을 만들 수 있다고 하죠. "},{"summary":"","title":"Authentic and Fresh Mobile App Design Ideas | TMDesign","location":"https:\/\/medium.com\/theymakedesign\/mobile-app-design-ideas-vol-231-bc218b0934a9","keywords":["Design"],"comments":""},{"comments":"제가 C 언어를 배울 때만 때문해도 단위 테스트 라이브러리는 몰랐었습니다. C 언어 테스트 코드가 신기해서(?) 가져왔습니다","title":"Automated testing in C — Part II | by Luís Soares ","keywords":["Culture"],"summary":"","location":"https:\/\/blog.devgenius.io\/automated-testing-in-c-part-ii-42304d40dadb"},{"summary":"","keywords":["SwiftUI","영어"],"location":"https:\/\/www.swiftwithvincent.com\/blog\/bad-practice-not-using-a-buttonstyle?","title":"Bad practice: not using a ButtonStyle — Swift with Vincent","comments":"ButtonStyle 대신에 Text를 포함할 수 있도록 커스텀 스타일을 만들어보라고 제안합니다"},{"summary":"","keywords":["SwiftUI"],"title":"Before WWDC 2024: Reviewing Key SwiftUI Upgrades | ITNEXT","location":"https:\/\/itnext.io\/before-wwdc-2024-reviewing-key-swiftui-upgrades-from-2019-to-2023-and-their-impact-b0e133c666fb","comments":"SwiftUI의 변천사를 설명해주는 글입니다. 과연 올해에는 어떤 변화가 기다리고 있을까요"},{"keywords":["AI\/ML","영어","pick"],"comments":"특정 기능을 작성해달라고 하기 보다는 JSON 데이터를 처리하는 구조체 만들기, 코드를 테스트하는 코드 만들기처럼 좀 더 구체적인 사례로 활용하는 방식을 설명합니다","title":"ChatGPT for Swift: Top 5 code generation prompts","summary":"","location":"https:\/\/www.avanderlee.com\/swift\/chatgpt-code-generation-prompts\/?"},{"location":"https:\/\/medium.com\/theymakedesign\/dashboard-design-ideas-vol-256-b346bd9cb7b2","summary":"","comments":"","title":"Clear and Simple Dashboard Design Ideas | TMDesign","keywords":["Design"]},{"keywords":["DeveloperTools"],"comments":"다양한 CLI 명령들을 소개합니다. 시각화가 잘 되어 있는 앱들이 많네요","location":"https:\/\/schlining.medium.com\/command-line-tools-i-use-on-a-mac-b47c98efd0af","title":"Command Line Tools I use on a Mac | by Brian Schlining ","summary":""},{"keywords":["Swift","영어"],"location":"https:\/\/www.massicotte.org\/concurrency-swift-6-se-401?","summary":"","comments":"스위프트 6 시대가 얼마남지 않았습니다. 그 중에서도 당연하게 포함될 기능들 중에서 Concurrency 관련 actor를 분리(isolated)하는 방식에 대한 문제 제기가 있습니다. 어떻게 반영될 지 궁금하네요","title":"Concurrency in Swift 6: SE-0401 | massicotte.org"},{"keywords":["Design","영어"],"summary":"","title":"Consistent and Custom Mobile Application Design Ideas | TMDesign","location":"https:\/\/medium.com\/theymakedesign\/mobile-application-design-ideas-vol-232-2d0b17b2e361","comments":""},{"title":"Core Image: The Basics | by Jacob Bartlett ","keywords":["Framework"],"summary":"","location":"https:\/\/levelup.gitconnected.com\/core-image-the-basics-608ee903f38c","comments":"이미지를 다룰 때 좀 더 낮은 수준에서 다루도록 도와주는 코어 이미지에 대한 기본적인 설명입니다. "},{"comments":"SwiftUI도 뷰 계층이기 때문에 값이 바뀔 때 다시 그려져야 할 지 고민해서 State로 해야할 지 판단해야 하겠죠","keywords":["SwiftUI","영어"],"location":"https:\/\/samwize.com\/2024\/05\/08\/do-not-init-state-externally-in-swiftui-view\/?","title":"Do NOT init State externally in SwiftUI | @samwize","summary":""},{"keywords":["SwiftUI","영어"],"location":"https:\/\/blog.devgenius.io\/domain-declarative-coding-in-swift-37cfe6df1015","summary":"","title":"Domain Declarative Coding in Swift | by Manuel Meyer ","comments":"FizzBuzz 문제를 DDC 도메인 선언적 코딩 방식으로 구현하는 과정을 설명합니다. 일상적인 영어 문법에 가깝게 도메인을 표현하기 위해 DSL로 접근하는 점이 흥미롭네요. 과연 저렇게까지 해야하나 논란이나 관심도 필요할 것 같습니다"},{"summary":"","keywords":["Swift","영어","pick"],"title":"Don't Double my money: on Swift Numeric types | VaraniOS","location":"https:\/\/varanios.com\/articles\/dont-double-my-money-on-swift-numeric-types\/?","comments":"소숫점이나 실수를 포함하기 위해서 숫자 타입들을 사용할 경우 생길 수 있는 문제들을 이야기합니다. 2의 배수를 고려하지 않으면 꽤나 자주 실수하는 부분들이죠"},{"location":"https:\/\/www.createwithswift.com\/embracing-spatial-computing-game-design-in-visionos\/?","keywords":["VisionOS"],"comments":"visionOS를 위한 게임 디자인에 대한 글입니다. 비전에는 어떤 장르의 게임이 어울릴까요? 공간 컴퓨팅을 위해서 어떤 기획과 디자인으로 접근해야 할까요. 얼마전에 나온 what-if 처럼 새로운 시도가 생겨나고 있는 것 같습니다","summary":"","title":"Embracing Spatial Computing: Game Design in visionOS"},{"summary":"","keywords":["Design"],"title":"Experimental and Immersive Dashboard UI Designs | TMDesign","comments":"","location":"https:\/\/medium.com\/theymakedesign\/dashboard-ui-designs-vol-255-9191e02685a6"},{"location":"https:\/\/github.com\/twostraws\/wwdc?","comments":"폴 허드슨이 생성하고 여러 개발자들이 모아둔 WWDC 커뮤니티 모임과 행사 관련 저장소입니다. 다양한 밋업과 모임이 있으니 관심을 가져볼 만 한 것 같습니다","title":"GitHub - twostraws\/wwdc: WWDC Community: Learning and sharing together","keywords":["Culture"],"summary":""},{"keywords":["AI\/ML","영어"],"summary":"인공지능(AI) 혁명이 진행 중이지만, 이에 대한 회의적인 시각이 늘고 있습니다. 일부 전문가들은 AI 기술의 한계로 인해 빠르게 발전이 어려울 것이라고 예측합니다. 최근의 기사들은 AI 기술이 높은 비용과 에너지 요구량 때문에 둔화되고 있다고 주장합니다. 그러나 AI 기술이 무용지물이라는 주장은 성급합니다. AI가 현재 인간 수준의 지능을 갖추고 있지 않더라도 특정 작업에서는 여전히 매우 유용합니다.\n\nAI는 현재의 한계를 극복하더라도 인간과의 융합을 통해 강력한 도구로 활용될 수 있습니다. 이미 코드 작성, 이미지 생성 등 다양한 분야에서 인간의 생산성을 높이고 있으며, 앞으로 더 많은 분야에서 인간과 협력하는 방식으로 혁신을 이끌 것으로 예상됩니다.\n\n게다가 AI 기술의 사용 방법과 적용이 발전하면 AI의 영향력은 더욱 커질 것입니다. 초기 인터넷이나 스마트폰 혁명처럼 AI도 사용 도구와 인터페이스가 개발되면 그 진가는 더 뚜렷해질 것입니다.\n\n이러한 맥락에서 AI 통합 솔루션의 발전이 중요합니다. 애플과 같은 회사는 AI 기술을 스마트폰과 같은 다른 기술처럼 효과적으로 통합할 수 있는 잠재력을 가지고 있습니다. 새로운 기술이 효과적으로 사용되기 위해서는 사용자 인터페이스를 개선하고, AI의 기능을 시각적으로 이해할 수 있도록 도와야 합니다.\n\nAI 혁명은 멈춘 것이 아니라 이제 막 시작된 것입니다. 앞으로의 발전은 기술 자체보다는 그 기술을 어떻게 사용하는가에 달려 있습니다.\n\n**키워드**: 인공지능 한계, 인간 통합, 생산성 향상, 사용 도구 발전, 인터페이스 개선","location":"https:\/\/erik-engheim.medium.com\/has-the-ai-revolution-crashed-bc34340da24d","comments":"인공지능이 인간을 완벽하게 대체하지 않더라도 여러 분야에서 생산성을 높이고, 더 많은 분야에서 인간과 협력하면서 혁신을 이끌 것이라고 전망합니다. AI 혁명이 끝난 것이냐는 담론에 이제 제대로 된 시작이라고 말할 수 있는 것 같습니다. 특히 애플은 더 늦은 것 같지만요","title":"Has the AI Revolution Crashed? | by Erik Engheim "},{"keywords":["AI\/ML"],"location":"https:\/\/medium.com\/tech-and-me\/how-chatgpt-nailed-an-xcode-project-creation-3b3ad2584e90","title":"How ChatGPT Nailed an Xcode Project Creation | by Anthony ","comments":"이렇게 GPT한테 물어보고 그대로 작업하는 분들이 많아지는 것 같습니다. 혼자서 학습하고 계신 앤소니 할아버지가 자신의 프로젝트 개선 경험을 공유한 글입니다. ","summary":""},{"comments":"애플 노트와 Drafts 앱을 쓰다가 마크다운 편집이 가능한 ProNotes 앱으로 넘어간 경험을 소개합니다","title":"How To Use Markdown in Apple Notes | by Julian Cosky ","keywords":["Culture"],"summary":"","location":"https:\/\/medium.com\/productivity-matters\/markdown-in-apple-notes-0cab8a5d465c"},{"summary":"","title":"How to Use MITM Proxy for Debugging API Calls on macOS | by Abhimuralidharan ","keywords":["DeveloperTools"],"location":"https:\/\/medium.com\/ios-essentials\/how-to-use-mitm-proxy-for-debugging-api-calls-on-macos-6bab9f78c909","comments":"MITM 가운데서 가로채는 mitmproxy 도구로 https로 감춰진 API를 디버깅하는 방식을 설명합니다. "},{"comments":"","location":"https:\/\/www.polpiella.dev\/swiftui-charts-progress-views\/?","keywords":["SwiftUI","영어"],"title":"How to build segmented circular progress views in SwiftUI with Swift Charts","summary":""},{"title":"Introduction to RealityView","keywords":["VisionOS"],"comments":"비전 앱에서 입체 형태 Scene 앱에서 RealityKit으로 3D 객체를 표시하는 과정을 설명합니다. 애플은 비전 앱은 공간을 이해하도록 만들라고 말합니다. 모든 앱이 RealityKit과 RealityView로 만들 필요는 없겠지만 더 현실적인 앱을 만들려면 시도해보면 좋겠습니다","location":"https:\/\/www.createwithswift.com\/introduction-to-realityview\/?","summary":""},{"comments":"별도 스레드에서 동작하는 Service를 안전하게 다루기 위한 라이프사이클 관리용 오픈소스 Swift Service Lifecycle를 소개합니다. ","summary":"","keywords":["OpenSources","영어"],"location":"https:\/\/swiftonserver.com\/introduction-to-swift-service-lifecycle\/?","title":"Introduction to Swift Service Lifecycle - Swift on Server"},{"comments":"디자이너들이 특정 요소를 눈에 띄게 하기 위해서 대비 색을 사용하거나 모양, 글꼴을 바꾸기도 하지만 그 변화가 지나치면 사용자들은 광고처럼 인식하고 무시하게 된다는 내용의 글입니다","title":"LukeW | Different Gets Ignored","summary":"루크 로블레우스키가 쓴 \"Different Gets Ignored\"는 디자이너들이 흔히 듣는 \"더 튀게 하라\"는 요청이 실제로는 정반대의 효과를 낼 수 있다는 내용을 다룬다. 디자이너들은 특정 요소를 눈에 띄게 하기 위해 대비 색상, 모양, 폰트 등을 사용하지만, 이러한 변화가 지나치게 다르면 사용자들은 이를 광고처럼 인식하고 무시하게 된다.\n\n리사 더딩턴(Keep It Usable 공동 창업자)은 임무에 집중한 사용자가 오버레이를 무시하는 경향을 연구에서 꾸준히 확인했다고 언급했다. 그녀는 사람들이 업무에 집중할 때 오버레이를 본능적으로 없애며, 나중에 도움이 될 메시지를 놓친다는 것을 지적한다. 페이스북의 터너 크리스텐슨도 같은 현상을 관찰했으며, 사람들이 툴팁을 무의식적으로 닫아버리는 경우가 많다고 말했다.\n\n레드 레이저의 사례도 언급된다. 초기 디자인에서는 주요 액션 버튼을 크게 만들고 색상을 달리했지만, 사용자들이 이를 완전히 무시했다. 후속 디자인에서는 버튼을 네비게이션 메뉴의 일부처럼 보이도록 색상을 통일하고 라벨을 추가하여 사용자들이 인식할 수 있게 했다.\n\n이 예시들은 중요한 요소를 눈에 띄게 하기 위해 시각적으로 구별짓기보다는 사용자 인터페이스(UX)에 자연스럽게 통합하는 것이 더 효과적이라는 것을 보여준다.\n\n**핵심 키워드:**\n1. 시각적 구별\n2. 사용자 무시\n3. 오버레이\n4. 사용자 인터페이스\n5. 통합 디자인","keywords":["Design","영어"],"location":"https:\/\/www.lukew.com\/ff\/entry.asp?2066"},{"location":"https:\/\/medium.com\/macoclock\/m4-ipad-pro-youre-wrong-39975df65a16","keywords":["Hardware"],"title":"M4 iPad Pro: you’re wrong. | by Lewis J Doyle ","comments":"신형 아이패드 프로를 사는게 틀림없이 좋은 방법이라며 한국 출시를 반기는 글이네요 ㅎㅎ","summary":""},{"title":"MapKit in SwiftUI: Getting Started | by AsyncLearn ","keywords":["SwiftUI"],"location":"https:\/\/asynclearn.medium.com\/mapkit-in-swiftui-getting-started-187d531bf419","comments":"MapKit 사용에 대한 꽤 상세한 설명입니다","summary":""},{"location":"https:\/\/andrewzuo.com\/maybe-webassembly-isnt-that-stupid-of-an-idea-after-all-e50113c896d1","title":"Maybe WebAssembly Isn’t That Stupid Of An Idea After All | by Andrew Zuo ","keywords":["Culture","영어"],"comments":"웹 어셈블리가 단지 웹 브라우저의 속도 문제를 해결하기 위한 도구라고 생각했다가, 여러 운영체제나 브라우저에서도 동일한 코드를 실행할 수 있도록 도와주는 상호 운용성을 높이는 도구로써 더 훌륭하다고 말합니다","summary":"이 글은 웹어셈블리에 대한 저자의 초기 부정적인 견해와 그것이 변하는 과정을 설명합니다. 저자 Andrew Zuo는 처음에는 웹어셈블리가 속도에서 비롯된 문제로 인해 실용적이지 않다고 생각했습니다. 웹어셈블리가 자바스크립트에서 C++로 전환하는 것만큼 빠르기를 기대했으나 현실은 그렇지 않았습니다. 하지만 그는 점차 웹어셈블리의 실질적인 장점이 속도가 아니라, \"상호 운용성\"이라는 것을 깨달았습니다.\n\n그는 웹어셈블리가 속도를 높이는 목적보다는 다양한 운영체제 및 브라우저에서 동일한 코드를 실행할 수 있는 능력에 있다는 점을 강조했습니다. 이를 통해 Java Virtual Machine (JVM)처럼 웹 브라우저에서 동작하는 소프트웨어를 어디서나 실행할 수 있게 됩니다. 또한, SQLite와 같은 데이터베이스와 ffmpeg와 같은 패키지가 웹어셈블리 덕분에 웹 브라우저 내에서 원활하게 동작하는 예를 들어 설명했습니다.\n\n저자는 웹어셈블리가 UI 성능 향상보다는 백엔드 프로그램 실행에서 더 큰 잠재성을 가지고 있음을 강조했습니다. 결론적으로, 웹어셈블리는 \"웹 가상 머신\"으로서 운영체제나 플랫폼에 구애받지 않고 다양한 소프트웨어를 실행하는데 중요한 역할을 할 것이라는 새로운 인식을 가지게 되었습니다.\n\n**주요 키워드:**\n1. 웹어셈블리\n2. 속도 vs 상호 운용성\n3. SQLite\n4. ffmpeg\n5. 웹 가상 머신 (Web Virtual Machine)"},{"keywords":["Architecture","영어"],"summary":"","location":"https:\/\/www.mobilesystemdesign.com\/blog\/declarative-api-design\/?","title":"Mobile System Design - Designing a Declarative API","comments":"DSL과 선언적 표현으로 동작하는 선언적인 API를 설계하고 구현하는 방식을 설명합니다. "},{"comments":"플러터로 5년동안 개발한 개발자가 어떤 경우에는 네이티브 개발을 선택할 것인지 3가지 예시를 들어 설명합니다","location":"https:\/\/thomasmiddel.medium.com\/native-app-development-is-dead-fa9c7b28e76f","title":"Native app development is dead | by Thomas Middel ","summary":"","keywords":["Culture"]},{"title":"NotPrivateAPIs | Documentation","comments":"애플에서 공개하지 않은 감춰진 API들에 대해서 공개하는 비공식 개발 문서입니다. 이 문서는 존재하지 않지만 존재합니다 ㅎㅎ","location":"https:\/\/notprivateapis.com\/documentation\/notprivateapis\/?","keywords":["DeveloperTools","영어","pick"],"summary":""},{"location":"https:\/\/medium.com\/simform-engineering\/observation-framework-for-swiftui-7ea434bf5895","title":"Observation Framework for SwiftUI | Simform Engineering","keywords":["SwiftUI","Swift"],"summary":"","comments":"이제야 본격적으로 써볼 수 있으려나요. Observation 프레임워크와 매크로 방식에 대해 설명합니다"},{"keywords":["Culture"],"comments":"visionOS 관련 글인가 싶었는데, 기술 중심으로 자본주의 넘어서자는 꽤나 정치적인 글 같습니다. ","title":"Panes et Circenses et Apple Vision Pro | by Flavio Masson ","summary":"이 글은 Flavio Masson이 쓴 것으로, Apple의 1984년 슈퍼볼 광고와 최근 출시된 Apple Vision Pro의 관계를 설명합니다. 1984년 광고는 감시 사회를 비판하며 IBM을 비유적으로 지적했고, 이 광고는 지금의 Apple과 유사한 점이 많습니다. Masson은 Vision Pro의 기술적 혁신에 감탄하지만, 기술 혁신에 대한 지나친 맹신과 자본주의 체제 강화에 대한 우려를 표현합니다. Vision Pro는 소비자의 욕망을 데이터로 전환해 자본 속박을 증대시킵니다. 눈 추적 기술은 우리의 개인적인 충동을 데이터로 수집해 자본 추출에 활용합니다. Apple이 탄소 중립성을 강조하지만 그 투명성에 의문을 제기합니다. \n\nMasson은 우리가 기술을 통해 자본주의 체제를 변화시킬 수 있는 방법을 모색해야 한다고 주장합니다. 디지털 식민지화에 맞서기 위해 기술을 활용한 저항의 사례를 제공합니다. 그의 주장은 기술 혁신이 단순히 자본주의를 강화하는 것을 넘어서야 한다는 것입니다.\n\n\n키워드: Apple, Vision Pro, 자본주의, 기술 혁신, 디지털 식민지화","location":"https:\/\/medium.com\/@flaviomasson\/panes-et-circenses-et-apple-vision-pro-ee85e483cdad"},{"title":"How to get the most out of Xcode Previews","keywords":["DeveloperTools","영어"],"comments":"","summary":"","location":"https:\/\/www.manu.show\/2024-05-30-previews\/?"},{"keywords":["DeveloperTools"],"location":"https:\/\/medium.com\/@SaezChristopher\/r-swift-is-better-than-swiftgen-for-ios-resources-generation-overall-ece9840a351e","comments":"안드로이드 리소스 관리 스타일 R처럼 동작하도록 하기 위한 여러 가지 팁을 제공합니다. ","title":"R.Swift is slightly better than SwiftGen for iOS resources generation | by Christopher Saez ","summary":""},{"keywords":["Culture"],"title":"Remote work is faltering —Slack and Zoom might be to blame. | by Sean Dexter ","comments":"슬랙과 줌으로만 일하려고 하기 때문에 리모트 근무가 흔들리고 있다고 주장합니다. 이미 많은 회사들이 다시 오프라인 풀타임 출근으로 바뀌고 있죠. 불과 몇 년만에 변화가 무척 많은 것 같습니다","location":"https:\/\/seandexter1.medium.com\/the-design-of-the-slack-huddles-feature-falls-cataclysmically-short-of-its-full-potential-01a7acaa191f","summary":""},{"title":"Routing and Deeplink with NavigationStack | by Safwen Debbichi ","keywords":["SwiftUI"],"comments":"","summary":"","location":"https:\/\/medium.com\/bforbank-tech\/routing-and-deeplink-with-navigationstack-66c7f2adb5a9"},{"comments":"맥용 앱을 만들 때 Scene 관점에서 필요한 여러 타입이 존재합니다. ","summary":"","location":"https:\/\/nilcoalescing.com\/blog\/ScenesTypesInASwiftUIMacApp\/?","keywords":["AppKit","SwiftUI","영어"],"title":"Scenes types in a SwiftUI Mac app"},{"comments":"클린 코드의 유행이 어디까지 갈까 중요한 게 아니고, 팀 내부에서 기술적인 논의와 함께 코드 작성후 리팩토링 실천할 수 있는 권장합니다","location":"https:\/\/itnext.io\/should-i-train-for-writing-clean-code-93ffaa5c550c","keywords":["Culture"],"title":"Should I Train for Writing Clean Code? | by Nikolay Nikolov ","summary":"니콜라이 니콜로프는 약 20년간의 소프트웨어 개발 경력을 가진 개발자로, 자신의 경험을 바탕으로 깨끗한 코드를 작성하는 중요성과 그 방법에 대해 논의합니다. 그는 팀 내에서 정기적인 기술적 논의를 주도하며, 코드 작성 및 리팩토링 작업을 통해 더 나은 소프트웨어를 개발할 수 있도록 장려합니다. 특히 Booking.com의 사례를 통해 \"코드카타(Code Kata)\" 과제를 도입하여 개발자들이 일상적인 업무와는 다른 문제를 다루도록 하였고, 이를 통해 깨끗한 코드 작성의 중요성을 인식시키고 실천할 수 있게 유도했습니다. 이러한 과정에서 팀원들 간의 협업과 상호 피드백을 통해 더욱 효율적이고 깨끗한 코드를 작성하는 능력을 키워갔습니다. 결국, 지속적인 훈련과 실습을 통해서만이 진정으로 깨끗한 코드를 작성할 수 있다는 점을 강조합니다.\n\n키워드:\n1. 깨끗한 코드\n2. 코드카타(Code Kata)\n3. 리팩토링\n4. 팀 협업\n5. 실전 연습"},{"location":"https:\/\/medium.com\/kerege\/swift-concepts-uniform-type-identifiers-e59beba885b7","title":"Swift Concepts: Uniform Type Identifiers | by Yeskendir Salgara ","keywords":["Framework"],"comments":"","summary":""},{"title":"Swift Package Manager framework creation in Xcode - SwiftLee","summary":"","comments":"SPM 소개부터 직접 패키지를 만들어서 관리하는 방법까지 설명합니다","keywords":["DeveloperTools","영어"],"location":"https:\/\/www.avanderlee.com\/swift\/creating-swift-package-manager-framework\/?"},{"comments":"좀 더 낮은 수준에서 뷰 동작 방식이나 장점을 비교하는 글입니다. SwiftUI가 iOS에서는 UIKit을 빌려쓰는 기능이 꽤 있다보니 모든 경우에서 SwiftUI가 좋다고 하기는 어렵습니다. ","location":"https:\/\/medium.com\/kerege\/swiftui-vs-uikit-under-the-hood-1ba0190ebd2b","summary":"","title":"SwiftUI vs UIKit: Under the Hood | by Andas Salgara ","keywords":["SwiftUI","UIKit","pick"]},{"summary":"","title":"SwiftUI: Infinite Scrolling Slideshow\/Image Carousel (The Easy Way!) | by Itsuki ","comments":"무한 스크롤로 슬라이드쇼 혹은 이미지 캐러셀 동작하도록 구현하는 쉬운 방법을 소개합니다","location":"https:\/\/blog.stackademic.com\/swiftui-infinite-scrolling-slideshow-image-carousel-739244177bef","keywords":["SwiftUI"]},{"keywords":["Architecture"],"comments":"그나마 구조에 대한 설명이 깔끔한 편입니다. 소스 코드도 구조에 맞춰서만 작성한 것은 아니라서 좋습니다","title":"The Clean Architecture with MVVM in the iOS SwiftUI Project | by Sajib Ghosh ","location":"https:\/\/blog.stackademic.com\/the-clean-architecture-with-mvvm-in-the-ios-swiftui-project-05dd8fe9ec7a","summary":""},{"location":"https:\/\/bryce.co\/animated-app-icons\/?","title":"Tricking iOS Into Animating App Icons - Bryce Bostwick","summary":"","comments":"","keywords":["Framework","영어","pick"]},{"location":"https:\/\/www.swiftjectivec.com\/wwdc-2024-the-pregame-quiz\/?","keywords":["Culture","영어"],"comments":"십수년전 WWDC 이벤트 혹은 그 내용에 어떤 기술이 포함되어 있었는지 알아맞추는 퀴즈 사이트입니다 ㅎㅎ","title":"W.W.D.C. 2024: The Pregame Quiz | Swiftjective-C","summary":""},{"location":"https:\/\/www.wwdcscholars.com\/?","keywords":["Culture","영어"],"title":"Welcome to WWDCScholars","comments":"WWDC 스칼라십 혹은 장학생 명단 사이트네요. 저는 10년만 젊었어도 힘들었겠죠 ㅜㅜ","summary":""},{"location":"https:\/\/itnext.io\/well-designed-rest-apis-in-outsystems-98e5e8ef2a91","keywords":["Culture"],"title":"Well-designed REST APIs in OutSystems | by Remco Dekkinga ","comments":"REST API와 구조에 대한 거의 모든 것을 설명하는 것 같네요","summary":""},{"title":"Why Can’t Apple Teach its Productivity Apps to Share Nicely | by Jbkendrick ","keywords":["Culture"],"comments":"기본 앱 만으로도 생산성을 높이기 쉬운 데 왜 안 알려주냐면서 정리한 글이네요","location":"https:\/\/medium.com\/@jbkendrick_50942\/why-cant-apple-teach-its-productivity-apps-to-share-nicely-707c083d6890","summary":""},{"title":"Xcode, Swift: A Guide to High-Performance Networking | by Yeskendir Salgara ","keywords":["Framework"],"comments":"Xcode 얘기보다는 저수준에서 빠르게 네트워크를 처리하도록 설정하고 다루는 방법들을 설명합니다","location":"https:\/\/medium.com\/kerege\/xcode-swift-a-guide-to-high-performance-networking-57d4c19ff6b2","summary":""},{"keywords":["DeveloperTools"],"comments":"APNS을 보내고 받기 위해서, 받고 나서 처리하기 위한 방식들을 설명합니다","location":"https:\/\/medium.com\/@jpmtech\/your-complete-guide-to-push-notifications-in-swiftui-8a13f5588662","title":"Your Complete Guide to Push Notifications in SwiftUI | by Chase ","summary":""},{"keywords":["Culture"],"summary":"","title":"macOS Seriously Needs To Catch Up With Windows 11 | by The Useful Tech ","comments":"맥 캠페인 배우도 나올 정도던데 과연 애플이 윈도우즈 11을 따라잡기 위해서 macOS를 진지하게 발전시키고 있냐. 무엇이 필요한가에 대해 설명합니다","location":"https:\/\/medium.com\/macoclock\/macos-seriously-needs-to-catch-up-with-windows-11-67afc35c590e"},{"comments":"","location":"https:\/\/medium.com\/codex\/macos-terminating-the-app-the-swiftui-way-b6dcd006f2ca","keywords":["SwiftUI"],"title":"macOS: Terminating the App the SwiftUI way | by Mark van Wijnen ","summary":""},{"comments":"에어팟 맥스를 사용하면서 알게 된 12가지 사항들을 소개합니다. 이미 아는 부분도 있고 또 모르는 부분도 있고 그렇습니다","keywords":["Hardware"],"summary":"","location":"https:\/\/medium.com\/macoclock\/i-called-airpods-max-bullsh-t-then-i-learnt-these-12-things-82736d358791","title":"t. Then I learnt These 12 Things. | by Nikhil Vemu "}],"sequence":104,"releaseAt":738342000}