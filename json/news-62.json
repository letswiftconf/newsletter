{"sequence":62,"releaseAt":683305200,"items":[{"title":"5 reasons I still feel SwiftUI is premature | by Enebin ","keywords":["SwiftUI","UIKit","Framework","pick"],"location":"https:\/\/enebin.medium.com\/swiftui-5-points-i-still-feel-swiftui-is-premature-25a377cdf288","comments":"아직 SwiftUI가 시기상조인 5가지 이유. 저도 아직 제약사항이 있다는 부분에서 충분히 공감합니다"},{"title":"@ViewBuilder usage explained with code examples - SwiftLee","keywords":["SwiftUI","영어","pick"],"location":"https:\/\/www.avanderlee.com\/swiftui\/viewbuilder\/?","comments":"ViewBuilder 프로퍼티 래퍼를 사용하는 예시를 상세하게 설명해주고 있습니다"},{"title":"Animations of sorting algorithms in Swift Charts - YouTube","keywords":["Swift #pick"],"location":"https:\/\/www.youtube.com\/watch?v=UCSXF741iHI","comments":"스위프트 차트를 이용해서 라이브 코딩하면서 정렬 알고리즘을 설명하는 영상입니다"},{"title":"App Design Inspiration 71 | Custom App Design Firm ","keywords":["Design"],"location":"https:\/\/theymakedesign.com\/app-design-inspiration-71-8ade675994e8","comments":""},{"title":"App Design Inspiration 72 | App UI Design Company ","keywords":["Design"],"location":"https:\/\/theymakedesign.com\/app-design-inspiration-72-e274bc09b895","comments":""},{"title":"App Development Inspiration 140 | Enterprise Mobile Company ","keywords":["Design"],"location":"https:\/\/theymakedesign.com\/app-development-inspiration-140-f8d60312bbde","comments":""},{"title":"Apple Car: Software and Money. by Jean-Louis Gassée | by Jean-Louis Gassée ","keywords":["Hardware"],"location":"https:\/\/mondaynote.com\/apple-car-software-and-money-51f86a3305d4","comments":"오랜만에 장 루이 가세 글입니다. 쉽지 않은 애플카에 대한 도전을 이야기하고 있습니다. "},{"title":"Apple M1 vs. M2 — Comparison | by Jakub Jirak ","keywords":["Hardware"],"location":"https:\/\/medium.com\/codex\/apple-m1-vs-m2-comparison-2673249f1fe2","comments":"기술적인 분석은 아니고 M1과 M2를 가볍게 비교해주는 글입니다"},{"title":"Apple’s use of AppKit, Mac Catalyst and SwiftUI in macOS","keywords":["AppKit","영어"],"location":"https:\/\/blog.timac.org\/2022\/0818-state-of-appkit-catalyst-swiftui-mac\/?","comments":"macOS 내에서 애플이 개발할 때 사용한 프레임워크가 AppKit인지 Catalyst, SwiftUI 인지 분석한 글입니다. macOS Ventura에서는 SwiftUI 사용이 12%까지 늘어났네요!"},{"title":"Chrome and Safari have great competition, meet the new and futuristic browser | by Abraham Hernandez ","keywords":["Culture"],"location":"https:\/\/bootcamp.uxdesign.cc\/chrome-and-safari-are-about-to-die-meet-the-new-and-futuristic-browser-73fed83dfb9a","comments":"크롬과 사파리가 경쟁하면서 긍정적인 영향을 주고 있다는 글입니다. 사파리가 웹 개발자들에게는 여전히 이단아입니다만 표준 지원도 차츰 나아지고 있는 것 같습니다"},{"title":"Collect build data and run experiments using dynamic Xcode build settings | Medium","keywords":["DeveloperTools","Testing"],"location":"https:\/\/medium.com\/@lightricks-tech-blog\/ab-testing-xcode-build-settings-5559eb89b3c5","comments":"여러 앱 버전과 스페이지, A\/B 테스트 조건까지 빌드 설정에 넣다보면 복잡해지죠. 그걸 다루기 위해서 xcconfig를 다루는 방식에 대한 설명입니다"},{"title":"Create Custom View Components in SwiftUI | by Ricardo Montemayor ","keywords":["SwiftUI"],"location":"https:\/\/levelup.gitconnected.com\/create-custom-view-components-in-swiftui-845b65e8ba94","comments":""},{"title":"DocC Interactive Tutorials — How to create an iOS framework Pt5 | by El Moez Amira ","keywords":["DeveloperTools"],"location":"https:\/\/itnext.io\/docc-interactive-tutorials-how-to-create-an-ios-framework-pt5-51b7a1040604","comments":"DocC로 인터액티브 튜토리얼 문서를 작성할 때 과정을 설명해줍니다. "},{"title":"Exploring the UIColor and Color APIs in iOS | by Riccardo Cipolleschi ","keywords":["UIKit","SwiftUI"],"location":"https:\/\/betterprogramming.pub\/exploring-the-uicolor-and-color-apis-in-ios-68c9ea7a2162","comments":""},{"title":"Faster StoreKit testing by syncing in-app purchase products","keywords":["Testing","Framework"],"location":"https:\/\/www.avanderlee.com\/xcode\/storekit-testing-syncing-configuration-file\/?","comments":"StoreKit 구매를 테스트하는 과정을 설명합니다"},{"title":"From NSRegularExpression to SwiftRegex","keywords":["Framework","RegEx"],"location":"https:\/\/www.polpiella.dev\/from-nsregular-expression-to-swift-regex\/?","comments":""},{"title":"Handling Cell Interactions When Using UIHostingConfiguration in iOS 16 - Swift Senpai","keywords":["UIKit","SwiftUI"],"location":"https:\/\/swiftsenpai.com\/development\/uihostingconfiguration-cell-interactions\/?","comments":""},{"title":"How to Make Custom Test Assertions in Swift | Quality Coding","keywords":["Testing","Swift","영문"],"location":"https:\/\/qualitycoding.org\/swift-test-assertions\/?","comments":"나만의 Assertion 만들기"},{"title":"How to bridge async\/await functions to Combine's Future type in Swift","keywords":["Framework","Swift"],"location":"https:\/\/tanaschita.com\/20220822-bridge-async-await-to-combine-future\/?","comments":"콤바인 Future 타입과 async\/await 연결하는 방법을 설명합니다"},{"title":"How to save enum with associated value in UserDefaults using Swift | Sarunw","keywords":["Swift","영어"],"location":"https:\/\/sarunw.com\/posts\/how-to-save-enum-associated-value-in-userdefaults-using-swift\/?","comments":"열거형 연관값을 UserDefault에 저장하는 방법입니다"},{"title":"How to validate field using Combine in SwiftUI | by DevTechie ","keywords":["SwiftUI","Framework"],"location":"https:\/\/medium.com\/devtechie\/how-to-validate-field-using-combine-in-swiftui-cf25280b77bc","comments":""},{"title":"Implementing Parts of the Swift Compiler in Swift - Development \/ Compiler - Swift Forums","keywords":["Swift","DeveloperTools","영어"],"location":"https:\/\/forums.swift.org\/t\/implementing-parts-of-the-swift-compiler-in-swift\/59524?","comments":"스위프트로 스위프트 컴파일러를 구현하는 작업을 위해서 일부 콤포넌트부터 구현을 시작했다고 하죠. 그 과정에서 필수적인 요구사항을 정리한 글이 포럼에 올라왔습니다"},{"title":"Intrinsic Content Size: Swift’s Sizing Mystery | by Steven Curtis ","keywords":["UIKit"],"location":"https:\/\/stevenpcurtis.medium.com\/intrinsic-content-size-swifts-sizing-mystery-364e1b2629e4","comments":"고유한 콘텐츠 사이즈(Intrinsic Content Size)를 처리하는 방법입니다"},{"title":"Lenses and prisms in Swift - The.Swift.Dev.","keywords":["Swift","영어","pick"],"location":"https:\/\/theswiftdev.com\/lenses-and-prisms-in-swift\/?","comments":"스위프트에서는 적용되지 않았지만, 하스켈로 대표되는 함수형 언어에서 사용하는 렌즈와 프리즘에 대한 소개입니다. Struct를 통해 구현하고 있지만, 프로토콜을 활용하는 방법도 고려해보면 좋겠습니다"},{"title":"MVVM with SwiftUI + Combine | by Varun Mehta ","keywords":["Architecture","Framework"],"location":"https:\/\/medium.com\/@catchvarun25\/mvvm-with-swiftui-combine-51edb1a011ce","comments":""},{"title":"Massive view controller a.k.a view model in SwiftUI | by Jim Lai ","keywords":["SwiftUI","Architecture"],"location":"https:\/\/swift2931.medium.com\/massive-view-controller-a-k-a-view-model-in-swiftui-2dc8f23eb7ed","comments":"거대한 뷰컨트롤러를 만들던 것처럼 SwiftUI에서 거대한 ViewModel을 만들게 되는 현상에 대한 글입니다"},{"title":"Mastering grid layout in SwiftUI | Swift with Majid","keywords":["SwiftUI","영어"],"location":"https:\/\/swiftwithmajid.com\/2022\/08\/10\/mastering-grid-layout-in-swiftui\/?","comments":""},{"title":"Morphing Nodes Under SceneKit | by Mark Lucking ","keywords":["Framework","SceneKit"],"location":"https:\/\/betterprogramming.pub\/morphing-nodes-under-scenekit-b6c72784265a","comments":""},{"title":"Actors and Data Races in Swift - Part 5 | by Tim Dolenko ","keywords":["Swift"],"location":"https:\/\/medium.com\/@timdolenko\/actors-and-data-races-in-swift-11d12f42c09b","comments":""},{"title":"Passwords Are Dead — This Is Newly Replacing It! | by Nikhil Vemu ","keywords":["Culture","영어"],"location":"https:\/\/medium.com\/macoclock\/passwords-are-dead-this-is-newly-replacing-it-826a97710b6b","comments":"애플 PassKey처럼 FIDO를 지원하는 경우가 많아지면 패스워드를 더이상 사용하지 않아도 되는걸까요! "},{"title":"Pulse 2.0 | kean.blog","keywords":["DeveloperTools","영문"],"location":"https:\/\/kean.blog\/post\/pulse-2?","comments":"애플 플랫폼의 로그 시스템 Pulse가 2.0으로 업데이트됐군요!"},{"title":"Recent Advances in Differentiable Swift | by Brad Larson ","keywords":["Swift","영문"],"location":"https:\/\/medium.com\/passivelogic\/recent-advances-in-differentiable-swift-f60ccc0c6f7e","comments":"구글에서 스위프트 for 텐서플로 팀이 해체되면서 창업한 PassiveLogic 에서 스위프트로 수학 모델을 구현하던 과정을 설명한 시리즈 글입니다. "},{"title":"Scrollable Segmented Control. This is a custom implementation | by N Musaev ","keywords":["UIKit","Framework","영어"],"location":"https:\/\/medium.com\/@n.musaev\/scrollable-segmented-control-5ed207409741","comments":"가로 스크롤 가능한 세그먼트 컨트롤 구현 예제입니다"},{"title":"String Parsing with Soulver Core | GitHub","keywords":["OpenSource"],"location":"https:\/\/github.com\/soulverteam\/SoulverStringParsing","comments":"Soulver 라는 앱의 핵심 라이브러리 중에서 계산식 문자열을 파싱하는 도구를 오픈소스로 공개했습니다. 개인은 무료 라이센스지만, 유료는 비용이 발생하는 조건입니다"},{"title":"Swift 5.7 removed limitation of type constrained extensions","keywords":["Swift"],"location":"https:\/\/twitter.com\/rudrankriyam\/status\/1559077672927600642?","comments":"Swift 5.7부터 자기 자신 타입을 표현하는 제약이 줄어들어서 조금더 유연해집니다"},{"title":"SwiftUI AttributedString is not there yet | by Thomas Ricouard ","keywords":["SwiftUI","Framework"],"location":"https:\/\/dimillian.medium.com\/swiftui-attributedstring-is-not-there-yet-63d49e9f9c16","comments":"SwiftUI AttributedString에 대한 특징과 제약사항을 설명해주는 글입니다. "},{"title":"The Best (Non-Apple) iPad Accessories for the Everyday User | by Adi Kakarla ","keywords":["Hardware"],"location":"https:\/\/medium.com\/macoclock\/the-best-non-apple-ipad-accessories-for-the-everyday-user-f3dcb24e990b","comments":"애플 제품 이외에 아이패드용 악세서리를 가볍게 추천해줍니다"},{"title":"The Lighter Swift Codegen for SQLite3 – Helge Heß – Software engineer.","keywords":["OpenSource","영어"],"location":"https:\/\/www.alwaysrightinstitute.com\/\/lighter\/?","comments":"SQLite3를 사용하기 위한 라이브러리와 도구"},{"title":"Using the Multipeer Connectivity Framework With SwiftUI 4 to Build a Game | by Joe Diragi ","keywords":["SwiftUI","Swift","DeveloperTools"],"location":"https:\/\/betterprogramming.pub\/using-the-multipeer-connectivity-framework-with-swiftui4-b2bf97f5be79","comments":"SwiftUI와 멀티피어 연결성 프레임워크를 사용해서 게임만드는 과정입니다"},{"title":"View Controller Presentation Changes in iOS and iPadOS 16 | by Geoff Hackworth ","keywords":["UIKit","Swift","pick"],"location":"https:\/\/hacknicity.medium.com\/view-controller-presentation-changes-in-ios-and-ipados-16-474c82c9ed2e","comments":"iOS16에서 UIViewController가 달라진 점을 상세하게 정리해준 글입니다. 특히 iPadOS에서는 Stage Manager 때문에 Window, Sheet, NavigationBar, SpiritView 크기 등이 소소하게 달라졌네요"},{"title":"WWDC22 한국어 비디오 자막 사용 가능 - 최신 뉴스 - Apple Developer","keywords":["APPLE"],"location":"https:\/\/developer.apple.com\/kr\/news\/?id=lw8dnr3l","comments":"어머 이런 적은 처음이야! 열심히 번역해주신 분들께 감사합니다 "},{"title":"What is a RunLoop Anyway? Swift and iOS Guide | by Steven Curtis ","keywords":["Swift","Framework","pick"],"location":"https:\/\/stevenpcurtis.medium.com\/what-is-a-runloop-anyway-swift-and-ios-guide-aa574577331b","comments":""},{"title":"XCUITest: Add waitForNonExistence() to your iOS Automation Toolkit | by Andronick Martusheff ","keywords":["Testing","Architecture","Hardware"],"location":"https:\/\/medium.com\/@martusheff\/xcuitest-add-waitfornonexistence-to-your-ios-automation-toolkit-a16afdf0b5e8","comments":"XCUITest로 UI테스트 하면서 필요한 화면을 기다리는 방법입니다"},{"title":"민소네블로그 - Xcodeproj Gem을 활용하여 Xcode Test Plans 생성 스크립트 만들기","keywords":["DeveloperTools","한국어","pick"],"location":"https:\/\/minsone.github.io\/xcode-ruby-generate-xctestplan-using-xcodeproj-gem?","comments":"이제 단골손님이시군요. Xcode Test Plans를 생성하는 스크립트 만들기 관련입니다"},{"title":"async\/await in Swift. All the features you need to know about | by Tim Dolenko ","keywords":["Swift","DeveloperTools","영어"],"location":"https:\/\/medium.com\/axel-springer-tech\/async-await-in-swift-9a4c9546b288","comments":""},{"title":"Building a Graph With SwiftUI | by M Salman A ","keywords":["SwiftUI","영어"],"location":"https:\/\/betterprogramming.pub\/building-a-graph-with-swiftui-b16dc48f7fe6","comments":"SwiftUI로 그래프 시각화를 위해 그래프를 그리는 방법에 대한 쉬운 설명입니다. "},{"title":"See what JavaScript commands get injected through an in-app browser · Felix Krause","keywords":["Culture","영어"],"location":"https:\/\/krausefx.com\/blog\/announcing-inappbrowsercom-see-what-javascript-commands-get-executed-in-an-in-app-browser?","comments":"페이스북이 인앱 브라우저에 JS코드를 넣어서 모든 것을 추적하고 있다는 소식이 전해지면서, InAppBrowser.com 사이트를 만들어서 어떤 것이 주입되어 있는지 확인할 수 있습니다."},{"title":"sswg\/0019-graphql.md at main · swift-server\/sswg","keywords":["Swift"],"location":"https:\/\/github.com\/swift-server\/sswg\/blob\/main\/proposals\/0019-graphql.md?","comments":"스위프트 오픈소스 제안 내용 중에 서버 그룹에 올라온 GraphQL 관련입니다. Graphiti 라이브러리는 swift-nio 기반으로 어느정도 구현이 되어 있어 곧 사용해볼 수 있을꺼 같네요"},{"title":"swift-evolution\/0371-isolated-synchronous-deinit.md at main · apple\/swift-evolution","keywords":["Swift"],"location":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0371-isolated-synchronous-deinit.md","comments":"아직 구현되지 않고 현재 리뷰중인 내용입니다만, deinit 시점에 데이터 레이싱 문제를 해결할 수 있도록 분리 처리하는 방법을 제안했네요. deinit 시점에 분리되서 동기\/비동기 메모리 처리를 할 수 있는 명령어가 생긴다고 생각하시면 될 것 같습니다"}],"version":"1.0"}