{"sequence":95,"items":[{"summary":"","title":"12 Things About macOS That I Love to Hate | by The Useful Tech ","location":"https:\/\/medium.com\/macoclock\/12-things-about-macos-that-i-love-to-hate-18a227721cf6","comments":"맥을 즐겨 사용하지만 납득하기 어렵거나 불편한 사항을 정리한 글입니다. 동일하게 동작하지 않아서 당황스러운 그래서 꽤 공감가는 내용들이 많이 있습니다","keywords":["Culture"]},{"keywords":["Culture","영어"],"summary":"","title":"4 Easy-to-Build and Extremely Useful iOS Shortcuts | by Tobias Hedtke ","location":"https:\/\/medium.com\/macoclock\/4-easy-to-build-and-extremely-useful-ios-shortcuts-23da0ad8414e","comments":"단축어에 무언가 만들어 넣기 레시피 같은게 종종 공유되는 데, 이번에도 그런 단축어 몇 개를 소개합니다. 맥에서는 단축어 명령을 바로 실행할 수 있어서 자동화가 편하더라구요! "},{"location":"https:\/\/medium.com\/@aplaceofmind\/5-little-macos-apps-that-make-a-big-difference-in-2024-0cc9015f5ee2","title":"5 Little macOS Apps that Make a Big Difference in 2024 | by a place of mind ","comments":"맥용 앱 중에서 소소하게 쓸만한 앱 5개를 소개합니다. 맨 아래 BetterDisplay는 이번호 오픈소스 프로젝트로도 소개하고 있습니다","keywords":["Culture"],"summary":""},{"title":"@Observable pessimizes arrays - Using Swift - Swift Forums","keywords":["Swift","영어","pick"],"comments":"스위프트 포럼에 올라온 글들 중에서 하나를 소개합니다. 시작은 `@Observable`을 붙이면 배열 복잡도가 달라져서 느려지냐? 글이었는데 willSet, didSet 과 배열 복사 등 CoW 까지 다양한 경우를 비교하게 되는 글타래입니다. SwiftUI 뿐만 아니라 모델 혹은 배열에 값을 넣어놓고 변화를 감지하는 것을 자주 쓰게 되는데요, 그럴 때 고려해 볼만한 시사점이 있습니다","summary":"","location":"https:\/\/forums.swift.org\/t\/observable-pessimizes-arrays\/69508"},{"summary":"","comments":"스위프트 5.9부터 접근 제어자가 기존 open, public, internal, private, fileprivate 5개에서 package 가 추가되었습니다. 패키지 내부 모듈에서만 접근 가능하도록 범위를 제한하는 module 단위보다 더 큰 패키지 단위가 생긴 셈입니다.","location":"https:\/\/blog.eidinger.info\/a-new-access-modifier-in-swift-package?","keywords":["Swift","pick"],"title":"A new access modifier in Swift: package"},{"summary":"","keywords":["Design","영어"],"comments":"","title":"Adaptive and Fresh UX Design Ideas | TMDesign","location":"https:\/\/medium.com\/theymakedesign\/ux-design-ideas-vol-144-812602638f03"},{"keywords":["SwiftUI","영어"],"summary":"","comments":"앱 실행 상태를 관리하는 방식을 소개합니다. 어떻게 보면 애플 프레임워크에서 제공해줘도 좋을 것 같은데 말이죠","title":"An Approach to Handling App Launch States in SwiftUI","location":"https:\/\/scottsmithdev.com\/an-approach-to-handling-app-launch-states-in-swiftui?"},{"location":"https:\/\/towardsdatascience.com\/apple-m3-machine-learning-speed-test-f1346e23a1b2","comments":"새로나온 M3 장비들을 포함해서 기계학습 관련 도구나 모델로 벤치마크한 결과입니다. 여전히 최고 성능은 NVIDIA TITAN RTX를 가진 전용장비지만, 다른 MLX를 사용하고 다른 용도를 고려한다면 애플 실리콘 장비도 타협할 만하다고 합니다","title":"Apple M3 Machine Learning Speed Test | by Daniel Bourke ","keywords":["Hardware"],"summary":""},{"summary":"애플의 새로운 헤드셋인 'Vision Pro'가 발표된 후 많은 기대와 관심 속에서 이제 현실로 다가왔습니다. 사전 예약이 시작되고 곧 중국, 캐나다, 영국이 차후 제품을 받게 될 국가들로 예상됩니다. 이번 출시는 별도의 행사 없이 진행될 예정이며, 애플은 WWDC에서 Vision Pro에 대한 계획을 발표한 바 있습니다. 첫 출시 제품은 많은 앱들이 출시되지 않은 초기 버전으로, 애플은 양질의 경험을 제공하는 것에 초점을 두고 있습니다.\n\nVision Pro 헤드셋은 특별한 소매 경험을 제공할 것입니다. 온라인에서 헤드셋을 구입하는 것이 매우 복잡할 수 있으며, 특히 처방전이 필요한 렌즈 삽입물을 필요로 할 경우 더욱 그렇습니다. 애플 매장에서는 체험에 대비하여 직원들을 훈련하고 있으며, 모든 직원들에게 3시간에 걸친 집중 훈련 세션을 진행할 예정입니다.\n\n제품 자체에는 256GB의 저장공간이 있고 표준으로 두 가지 머리띠가 포함될 예정이며, 영상 재생 시간은 2-2.5시간으로 예상됩니다. 처방전 렌즈의 가격도 발표되었으며, 피팅 경험은 매장의 대기 시간 증가로 이어질 수 있습니다. 애플은 올해 매장에서 약 50만 개의 단위를 출하할 것으로 예상하고 있으며, 이는 헤드셋의 천천히 성장하고 있는 시장을 의미합니다.\n\n애플은 최근 좋지 않은 재정 결과를 보고했으며, 판매 감소 분기를 이어갈 것으로 예상되지만, Vision Pro는 그동안 애플이 추구해온 혁신의 길을 걷고 있는 제품입니다. 이 헤드셋은 애플에게 중요한 역할을 할 것이며, 기존 제품군과 마찬가지로 회사의 상태를 유지하는데 중요한 역할을 할 것으로 보입니다.\n\n요약 키워드: 애플, Vision Pro 헤드셋, 사전 주문, 매장 체험, 처방전 렌즈","location":"https:\/\/medium.com\/macoclock\/apple-vision-pro-a-1st-for-us-all-d0d14010d51a","title":"Apple Vision Pro — a 1st for us all | by David Lewis ","comments":"비전 프로가 발표되고 사전 예약이 시작했으니 곧 만나보기를 기대하는 글들이 나오고 있습니다. 애플 스토어 직원들은 비전 프로 매장 체험을 위해서 특별 교육 프로그램을 들었다고 합니다. 의외로 많이 팔려서 앞으로 성장이 기대됩니다","keywords":["Hardware"]},{"keywords":["APPLE"],"summary":"애플은 전 세계 스트리밍 게임 서비스와 미니 앱 및 게임에 접근을 제공하는 앱을 위한 새로운 옵션을 소개하고 있습니다. 개발자들은 이제 하나의 앱으로 전체 게임 카탈로그를 스트리밍할 수 있는 기능을 제출할 수 있습니다. 또한 앱은 스트리밍 게임, 미니 앱, 미니 게임, 챗봇 및 플러그인과 같은 앱 내 콘텐츠를 더 잘 발견할 수 있도록 향상된 기능을 제공할 수 있게 되었습니다. 이러한 새로운 콘텐츠는 애플의 인앱 구매 시스템을 통해 사용자에게 유료 디지털 콘텐츠나 서비스를 처음으로 제공할 수 있습니다.\n\n그리고 개발자들을 위한 새로운 앱 분석 보고서를 3월부터 제공할 예정이라고 합니다. 이는 개발자들이 자신들의 앱 성능을 더 깊이 이해하고 개선 기회를 찾을 수 있도록 돕기 위한 것입니다. 여기에는 사용자 참여, 상거래, 앱 사용, 프레임워크 사용 등 다양한 메트릭스에 대한 추가 정보가 포함됩니다.\n\n앱 내 로그인 옵션에 더 많은 유연성을 제공하기 위해, 개발자들이 제공하는 제3자 또는 소셜 로그인 서비스에 애플 ID를 사용하여 로그인하는 'Sign in with Apple'의 변동 사항에 대해 애플은 앱 스토어 검토 지침을 업데이트하고 있습니다.\n\n요약 키워드: 스트리밍 게임 서비스 옵션, 앱 분석 보고서, Sign in with Apple, 앱 스토어 검토 지침, 개발자 지원","title":"Apple introduces new options worldwide for streaming game services and apps - Apple Developer","location":"https:\/\/developer.apple.com\/news\/?id=f1v8pyay","comments":"이제 여러 스트리밍 게임, 미니 앱, 미니 게임 등 앱 내에서 카타로그를 포함하는 하나의 포괄적인 앱을 만들 수 있다고 합니다. 3월부터는 앱 리포트도 좀 더 세분화되고 앱 내 로그인 옵션도 다른 로그인 지침이 추가된다고 합니다"},{"title":"Asynchronous SwiftUI buttons — Dean’s blog","summary":"","keywords":["SwiftUI","영어","pick"],"comments":"(샘플 코드 자체가) 제 마음에 쏙 드는 것은 아니지만 버튼이 비동기적으로 동작한다면 어떻게 구현할 수 있는지 설명하는 글입니다. 저라면 동작 일부를 하위 타입으로 분리했을 것 같습니다","location":"https:\/\/blog.thomasdurand.fr\/story\/2024-01-14-asynchronous-swiftui-buttons\/?"},{"location":"https:\/\/medium.com\/theymakedesign\/mobile-ui-ux-designs-vol-212-23aa944b83d3","keywords":["Design","영어"],"title":"Captivating and Innovative Mobile UI\/UX Designs | TMDesign","comments":"","summary":""},{"comments":"","location":"https:\/\/nilcoalescing.com\/blog\/CaseInsensitiveStringComparisonInSwift\/?","summary":"","title":"Case insensitive string comparison in Swift","keywords":["Swift","영어"]},{"comments":"글로벌 변수를 동시에 다뤄야 할 때는 데이터 레이싱을 예방해야 하겠죠. Concurrency-safe 동시 접근시 안전한 글로벌 변수를 처리하는 방식을 설명합니다. 특히 Swift 6부터 좀 더 엄격한 기준을 적용할 수 있으니 고려사항을 이야기합니다","location":"https:\/\/www.avanderlee.com\/concurrency\/concurrency-safe-global-variables-to-prevent-data-races\/?","title":"Concurrency-safe global variables to prevent data races - SwiftLee","keywords":["Swift","영어"],"summary":"이 글은 동시성에 관해 글로벌 변수가 데이터 경쟁을 예방하는 방식에 대해 설명합니다. 개발자는 앱의 예기치 않은 충돌을 방지하기 위해 데이터 경쟁을 방지해야 합니다. Swift 6 준비 시 엄격한 동시성 빌드 설정을 활성화하고 공유된 가변 상태에 대한 경고들을 마주할 것입니다. 글로벌 변수는 코드의 어디에서나 접근할 수 있어 동시성이 안전하게 설정되어야 합니다. 수정가능성을 삭제하거나 Sendable 프로토콜을 채택해야 하는데, `@MainActor`로 분리하거나 Sendable을 준수하게 하여 불변으로 만드는 등 방법이 있습니다. SE-412 제안에 따라, 특별한 상황에서는 `nonisolated(unsafe)` 키워드를 사용하여 동시성 검사에서 제외할 수 있습니다. 결론적으로 동시성 안전을 확충하여 글로벌 변수를 사용해야 하며, 이를 위해 동시성 카테고리 페이지에서 더 많은 팁을 배울 수 있습니다.\n\n요약 핵심 키워드: SwiftLee, Swift, 글로벌 변수, 데이터 경쟁, 동시성 안전"},{"summary":"","location":"https:\/\/www.createwithswift.com\/crafting-better-app-icons\/?","comments":"더 멋진 앱 아이콘을 만들기 위한 과정을 스케치부터 발전 과정을 설명합니다. 개발자가 직접 고민하지는 않겠지만 흥미로운 글이었습니다","title":"Crafting better App Icons","keywords":["Design"]},{"summary":"","location":"https:\/\/medium.com\/@sarathiskannan\/how-to-debug-swiftui-view-5f70d83c9e2a","title":"Debugging SwiftUI View | by Sarathi Kannan ","keywords":["DeveloperTools"],"comments":""},{"keywords":["DeveloperTools","영어"],"summary":"","location":"https:\/\/swiftonserver.com\/developing-with-swift-in-visual-studio-code\/?","comments":"","title":"Developing with Swift in Visual Studio Code - Swift on server"},{"keywords":["Design","영어"],"location":"https:\/\/medium.com\/theymakedesign\/mobile-ux-designs-vol-213-9f681af2889c","comments":"","summary":"","title":"Edgy and Intentional Mobile UX Designs | TMDesign"},{"keywords":["Design","영어"],"comments":"","location":"https:\/\/medium.com\/theymakedesign\/mobile-ui-design-ideas-vol-214-f018dad047ed","summary":"","title":"Expressive and Minimalistic Mobile UI Design Ideas | TMDesign"},{"title":"I Have a BIG Problem With Vision Pro | by Mark Ellis ","location":"https:\/\/medium.com\/macoclock\/i-have-a-big-problem-with-vision-pro-d5ae37549659","comments":"","keywords":["Hardware"],"summary":"마크 엘리스는 애플이 라스베이거스의 CES 개막 하루 전에 Vision Pro를 2주 내에 사전 주문할 수 있으며, 2월 초부터 고객 배송이 시작될 것이라고 발표했지만, 몇 가지 문제점을 지적합니다. 첫째, Vision Pro는 미국 출시만 해당되며 다른 나라에서 언제 구할 수 있을지 정보가 없습니다. 둘째, Vision Pro에 대한 관심이 크지 않습니다. 셋째, 애플 중심의 리뷰어로서 저자에게 어려운 상황을 만들었습니다.\n\n미국 내에서만 출시되는 Vision Pro에 대한 소문은 그리 좋지 않습니다. 유명한 시장 분석가인 명치궈는 애플이 WWDC 전에 Vision Pro를 국제적으로 출시할 것으로 기대한다고 언급하였습니다. 이에 따라, 영국에 있는 저자는 두 가지 선택지가 있습니다: 미국으로 가서 Vision Pro를 구입하거나 WWDC 전 영국 출시를 기다리는 것입니다. \n\n요약 키워드: 애플, Vision Pro, 미국 출시, 관심 부족, 마크 엘리스, 영국 출시 예상"},{"title":"Leveraging OpenAI GPT-4 Vision API for SwiftUI App Generation | by Jake Lin ","location":"https:\/\/medium.com\/@jake_lin\/leveraging-openai-gpt-4-vision-api-for-swiftui-app-generation-3db4622ae0b5","keywords":["SwiftUI"],"comments":"작년에 GPT로 코딩하는 이런 글이 많았는 데, GPT-4 Vision API를 사용하는 예제라서 골라봤습니다. 중간에 코드 생성을 위한 프롬프트가 나와서 참고할 만 합니다","summary":""},{"keywords":["Culture"],"location":"https:\/\/medium.com\/macoclock\/mac-at-40-is-the-king-dead-or-as-strong-as-ever-97b49ca8bad7","summary":"맥이 40번째 생일을 맞이했습니다. 초기에는 대중들 사이에서 큰 사랑을 받지 못했지만, 지금은 그 어느 때보다 건재합니다. 애플 내부의 경쟁과 높은 가격에도 불구하고, 맥은 혁신적인 인터페이스와 개인용 컴퓨터로서 새로운 길을 제시했습니다. 애플이 파산 직전에 있던 시기, 스티브 잡스가 복귀하여 맥을 간소화하고 아이팟과 macOS 개발에 집중하여 애플을 회생시키는 데 큰 역할을 했습니다. 애플은 항상 맥에 대한 신념을 잃지 않았으며, 맥은 애플의 기반으로 남아 있습니다.\n\n애플 실리콘은 맥의 미래에 커다란 변화를 가져왔습니다. 애플 실리콘 탑재된 맥은 아이패드 앱을 실행할 수 있게 되었으며, 빼어난 배터리 수명을 갖춘 노트북을 가능하게 했습니다. 또한 최근에는 Vision Pro를 맥 모니터로 사용할 수 있는 기능을 소개하며 맥의 연결성을 강화했습니다.\n\n맥은 여전히 애플 사업의 핵심 부분이며, 다른 애플 기기들과 중요한 보완적 역할을 합니다. 맥은 40년 전에 개인용 컴퓨터 개념을 혁신하였고 오늘날까지 계속해서 호평을 받고 있습니다. 결국 맥은 애플에 있어 핵심적이며, 맥을 향한 사람들의 사랑은 갈수록 커져가고 있습니다.\n\n요약 키워드: 맥(Mac) 40주년, 애플 실리콘(Apple Silicon), macOS, 사용자 경험, 스티브 잡스(Steve Jobs)\n","title":"Mac at 40 — is the king dead or as strong as ever? | by David Lewis ","comments":"1월 24일이 매킨토시가 나온지 40주년이었습니다. 유명한 리사와 매킨토시 일화처럼 40년 전에 맥은 잡스를 쫓겨나게 만든 제품이었습니다. 40년이 지나고 맥은 사라지지 않고 사랑은 더 커진 것 같네요"},{"location":"https:\/\/blog.devops.dev\/mobile-devops-for-enterprise-that-just-works-d16260595776","keywords":["DeveloperTools"],"comments":"모바일 환경을 위한 DevOps 그 중에서도 iOS는 맥에서만 동작해야 하기 때문에 따로 관리하는 경우가 꽤 많습니다. 자신의 경험을 바탕으로 일반적인 깃헙 액션과 모바일 특화된 Appcircle을 비교한 글입니다. ","title":"Mobile DevOps for Enterprise that Just Works | by Jacob Bartlett ","summary":"모바일 개발에 있어서 DevOps는 항상 문제적인 분야였다. 팀은 앱 리뷰를 통과해야 해서 단순히 배포만 할 수 없으며, iOS에서는 Mac 하드웨어에서만 빌드를 해야 하기 때문에 더욱 복잡하다. 저자 Jacob Bartlett는 현재 자체 호스팅된 Mac Mini에서 GitHub Actions와 Fastlane 스크립트를 사용하는데, MacOS 클라우드 러너를 사용하는데 드는 비용을 보고 나서는 옵스 팀과 일주일간 대화가 없었다고 한다.\n\n이 글에서 Jacob은 기업용 완전 자동 모바일 DevOps 플랫폼을 표방하는 Appcircle을 평가해보기로 했다. 그는 다음과 같은 키 메트릭을 사용해서 GitHub Actions와 Appcircle를 비교했다: 설정의 용이성, 인프라 관리, 빌드 속도, 권한 관리, 그리고 불공정한 이점들. 특히 \"불공정한 이점(Unfair advantages)\"은 Appcircle이 모바일 개발에 특화된 툴이기 때문에 GitHub Actions와 공정하게 비교할 수 없는 기능들을 의미한다.\n\n결론적으로 Appcircle는 설정이 훨씬 쉽고 인프라 관리 부담이 적으며 빌드 속도도 빠른 편이다. 또한, 권한 관리 측면에서는 필요에 따라 Appcircle와 GitHub Actions 간의 선택이 달라질 수 있다고 한다. Appcircle가 GitHub Actions에 대한 불공정한 이점으로는 테스터 관리, 인증서 및 프로파일 관리, 엔터프라이즈 앱 스토어, API를 이용한 자동화 등을 들 수 있다.\n\n키워드: 모바일 DevOps, CI\/CD 도구, GitHub Actions, Appcircle, 설정 용이성, 인프라 관리, 빌드 속도, 권한 관리, 모바일 특화 기능"},{"keywords":["Design","영어","pick"],"location":"https:\/\/www.nubero.ch\/blog\/009\/?","title":"In Praise of Buttons – Part One","summary":"디자인 분야의 흐름 중 하나는 버튼이 유행하지 않는다는 것입니다. 오랫동안 존재하고 작동하는 버튼은 단조롭다고 여겨집니다. 하지만 디자이너는 사용자의 필요를 무시하며 버튼의 모양이나 기능을 새롭게 디자인하여 새로운 발전으로 판매합니다.\n\n스크린 상의 버튼은 최근에 독특하고 명확한 버튼 형태가 없이 텍스트나 아이콘만으로 구성되는 경우가 많아졌습니다. 이는 사용자 친화적이지 않으며, 아이콘 만으로는 사용 가능하다는 것을 충분히 전달하지 못합니다.\n\n실제 버튼의 형태를 가진 UI 버튼은 사용자에게 조작 가능성을 더 명확히 알려줍니다. 또한, 버튼 형성을 통해서 그룹을 구성하고, 상호작용 지점을 넓힐 수 있음을 보여줍니다.\n\n버튼에 텍스트를 사용할 때도 형태의 중요성은 명확합니다. 예를 들어, \"동의\"와 \"동의하지 않음\"과 같은 단어 버튼은 읽기 쉬워야 하고, 다른 텍스트들과 구분되어야 합니다.\n\n직접적인 조작에서는 사용자가 버튼을 누른 것을 확인할 수 있는 피드백이 중요합니다. 이는 신체적, 시각적, 청각적 또는 촉각적 피드백을 통해 이루어질 수 있습니다.\n\n디자인 요소가 버튼처럼 동작한다면 그것이 버튼처럼 보여져야 한다는 것이 중요합니다. 사용자 인터페이스를 단순화하는 것이 반드시 뇌의 인지적 부하를 줄이는 것은 아니며, 서로 다르게 보이는 요소들을 통하여 확실히 구분되어야 합니다.\n\n키워드: 유저 인터페이스, 버튼 디자인, 사용자 친화적, 직접적인 조작, 인지적 부하","comments":"이번 호에는 UI\/UIX 글이 꽤 있네요. 그 중에서도 이 글은 iOS 7 이후 평평해진 Flat Design에서 특히 버튼이 버튼답지 못하다는 것을 지적합니다. 집적적으로 조작해야 하는 버튼인데 인지하기 어렵다는 점을 강조하고 있습니다. 올드한(?) 저는 어느정도는 동의하는 편입니다"},{"comments":"CPU를 소모하게 되는 오프스크린 렌더링 성능에 대한 이야기입니다. 항상 나쁘다고 할 수는 없지만 인지하고 주의할 필요는 있는 요소입니다","summary":"이 기사는 iOS 애플리케이션 개발 시 중요한 성능 문제인 오프스크린 렌더링에 관한 것입니다. 이 문제는 Xcode의 시각적 디버거를 사용할 때 발견될 수 있습니다.\n\n오프스크린 렌더링은 GPU가 아닌 CPU에 의해 수행되는 소프트웨어 렌더링으로, 화면에 그려지기 전에 완료되어야 합니다. 특히 CALayer의 모서리 둥글기(radius), 그림자(shadow), 마스크(mask), CGContext를 사용한 사용자 정의 그리기, shouldRasterize가 YES로 설정된 CALayer에서 이러한 현상이 일어날 수 있습니다.\n\nXcode에서는 장치에서 'Debug>View Debugging>Rendering>Color Offscreen-Rendered Yellow' 옵션을 통해 오프스크린 렌더링이 발생하는 부분을 노란색으로 표시하여 확인할 수 있습니다. 커티스는 UITableView를 예로 들어 UIImageView에 그림자를 추가하는 방법과 오프스크린 렌더링을 일으키는 문제점을 시연합니다.\n\n오프스크린 렌더링이 성능에 영향을 주므로, 개발자들은 이를 피하기 위해 UITableViewCell 서브클래스를 만들 수 있습니다. 이 서브클래스를 통해 layoutSubviews()에 액세스하고, UIBezierPath를 사용하거나 shadowPathCache라는 프로퍼티에 그림자 경로를 캐싱할 수 있습니다.\n\n요약 키워드: iOS, 오프스크린 렌더링, 성능 최적화, Xcode, UITableViewCell","location":"https:\/\/blog.stackademic.com\/offscreen-rendering-in-ios-faf9cbe488ea","title":"Offscreen Rendering in iOS. Performance is important! | by Steven Curtis ","keywords":["UIKit","pick"]},{"location":"https:\/\/medium.com\/@Jager-yoo\/optimizing-ios-widget-network-calls-with-temporary-caching-e32c01570a5c","comments":"위젯 개발하면서 네트워크 요청이 캐싱되는 상황을 최적화한 사례를 잘 정리해주셨네요. 아마 현대차 iOS 개발자 분이신데 글은 영어 글입니다 :) ","title":"Optimizing iOS Widget network calls with temporary caching | by Jaeho Yoo ","keywords":["Framework"],"summary":""},{"comments":"작은 스타트업에 iOS 개발자로 들어가보니 AppDelegate에 1,000줄 넘는 코드가 있고 심지어 UI도 다루는 상황이다. 그래서 앞으로 그걸 SwiftUI로 개선하려고 한다는 글입니다. 파트1이라 세부적인 내용은 없지만 동병상련(?)이 느껴지는 글이었습니다 ","title":"Refactoring UIKit Storyboards monolith to SwiftUI: Part 1 | by Ignas Pileckas ","summary":"현재 AttaPoll 앱의 상황은 다음과 같습니다. 전담 개발자 없이 회사의 두 창업자가 개발하였으며, 유지 관리가 필요할 때마다 파트타임 프리랜서를 고용했습니다. 앱은 스토리보드만을 사용하며 AppDelegate는 약 1000줄의 코드로 구성되어 있었습니다.\n\n프로젝트를 시작하기 전에 가장 큰 문제점을 평가하고 근본적인 문제를 해결해야 합니다. AppDelegate는 앱의 진입점으로 iOS 12를 지원하고 있어 여전히 중요한 부분이며, UIStoryboard를 새로운 `rootViewController`로 설정하는 많은 메서드를 포함하고 있습니다. 또한, 네트워킹 라이브러리는 구식의 Objective-C 라이브러리를 사용하고 있었으며, ViewController의 ViewDidLoad 메서드에서 직접 호출되었습니다.\n\n굵직한 문제점들은 다음과 같습니다: 1) AppDelegate가 UI를 다루고, 서비스 내에서 AppDelegate에 직접 호출이 이루어지며, 조정자(coordinator) 클래스가 없습니다. 2) iOS 12 지원, SceneDelegate 미 존재. 3) 스토리보드 사용이 만연함. 4) 스토리보드 내 ViewController의 ViewDidLoad, ViewDidAppear 메서드에서 네트워크 호출이 이루어짐\n\n요약 키워드: #AttaPoll #iOS #재설계 #스토리보드 #SwiftUI","location":"https:\/\/medium.com\/@iPile\/refactoring-uikit-storyboards-monolith-to-swiftui-part-1-dfb5a8624eba","keywords":["UIKit"]},{"title":"Relationships in SwiftData: Changes and Considerations | ITNEXT","location":"https:\/\/itnext.io\/relationships-in-swiftdata-changes-and-considerations-563e83a3d8b9","keywords":["Framework","pick"],"comments":"계속해서 SwiftData 시리즈를 작성해고 계시네요. Relationship 설정에서 기본값 설정이 아직 안되고, 역관계를 설정하는 데 모호한 점이 있다고 합니다. 배열을 사용해서 대량의 데이터를 다룰 때 Core Data보다 성능이 느려지는 지점도 설명합니다","summary":"이 글은 Core Data의 후속 제품인 SwiftData에서의 변화와 이에 대한 고려 사항들을 다루고 있습니다. 특히, SwiftData가 도입된 이후의 관계설정에 있어 변화된 점과 그에 따라 고려해야 할 점들을 중점적으로 설명합니다. SwiftData에서는 개발자들이 순수 코드를 통해 데이터 모델을 직접 선언할 수 있는 새로운 접근법을 제공합니다. 이는 기존의 '내부에서 바깥으로(Inside-Out)'에서 '바깥에서 내부로(Outside-In)'로의 패러다임 전환을 의미합니다. 또한, SwiftData에서는 관계의 기본값 설정에 있어서 겉보기에 가능한 것처럼 보이나 실제로는 불가능하며, 생성자 내에서 관계 데이터를 생성하는 방법이 좋아진 점으로 간주됩니다. 그러나 SwiftData에서는 역관계를 설정하는 데 있어 명확한 규칙이 없으며, 성능 문제 역시 SwiftData에서 Array를 사용할 때 발생할 수 있는데, 이는 대량의 데이터 처리 시 Core Data보다 훨씬 느릴 수 있음을 보여줍니다. 이러한 상황에 대한 방안으로는 관계 배열에 대한 작업 횟수를 줄이는 것이 제안됩니다.\n\n요약 키워드:\n1. SwiftData\n2. 데이터 모델 선언\n3. 관계설정 변화\n4. 역관계 설정\n5. 성능 문제"},{"keywords":["DeveloperTools","영어","pick"],"title":"Release Train in mobile development | by Max Kach ","summary":"모바일 개발에서의 '릴리스 트레인'에 관한 기사에서 맥스 카차는 도도 피자 앱(Android\/iOS)에서 릴리스 트레인을 도입하게 된 경험을 공유합니다. 이는 여러 작은 팀들이 작업하는 큰 프로젝트에 적합한 방법으로, 릴리스 프로세스를 예측 가능하고 안정적으로 만들어 줍니다. 주요 문제는 릴리스가 너무 클 때, 여러 팀이 동시에 기능을 완성할 때 발생하는 병목 현상, 그리고 릴리스의 불확실성으로 인한 문제였습니다.\n\n릴리스 트레인 프로세스는 각 팀이 릴리스 일정을 독립적으로 관리할 수 있게 하고, 모든 릴리스가 미리 정해진 시간표에 따라 진행됩니다. 이는 일정을 예측 가능하게 하고 릴리즈를 효율적으로 관리할 수 있게 합니다. 도도 피자의 경우, 매주 릴리스를 시작했지만 회귀 테스트 시간 때문에 격주로 변경했습니다. 새 릴리스 절차는 모바일 개발자, QA, 제품 관리자들에게 예측 가능한 일정을 제공하고 긍정적인 동향을 보이는 지표를 가져왔습니다. 카차는 계속해서 자동화 및 향상시킬 수 있는 방법들을 모색하고 있습니다.\n\n요약 키워드: 모바일 개발, 릴리스 트레인, 예측 가능성, 회귀 테스트, 프로세스 자동화","comments":"릴리스 기차를 활용해서 안정적인 릴리스 프로세스를 다루는 과정을 설명합니다. 격주로 릴리스를 하기 위해서 회귀 테스트와 QA 일정 등을 조정한 부분이 인상적이었습니다","location":"https:\/\/proandroiddev.com\/release-train-in-mobile-development-4c67954ab1b3"},{"title":"Remove background from image in SwiftUI","location":"https:\/\/www.artemnovichkov.com\/blog\/remove-background-from-image-in-swiftui?","keywords":["SwiftUI","영어"],"comments":"","summary":""},{"location":"https:\/\/www.avanderlee.com\/swiftui\/scrollview-bounce-behavior\/?","title":"ScrollView Bounce Behavior configuration in SwiftUI","comments":"스크롤뷰 바운스 반동에 반응하는 UI를 종종 만드는 데 특히 SwiftUI에서 뷰 끝까지 도달했을 때 반동을 적용하는 팁을 소개합니다","keywords":["SwiftUI","영어","pick"],"summary":"이 글에서는 스크롤 가능한 뷰가 내용 끝에 도달했을 때 반동될지를 정의하는 방법에 대해 설명합니다. SwiftUI에서 view 수정자를 사용하여 수평 또는 수직 스크롤 리스트의 반동을 설정할 수 있습니다.\n\n기본적으로 ScrollView는 반동이 설정되어 있지만, `.scrollBounceBehavior(_:axes:)` 수정자를 사용하여 명확하게 설정할 수 있습니다. 또한, 내용 크기에 따라 반동을 비활성화하고, 특정 축에 대해서만 반동을 설정할 수 있는 방법을 제공합니다.\n\nUIScrollView의 appearance API를 사용하여 반동을 중지할 수 있지만 이는 모든 ScrollView에 영향을 주기 때문에 추천하지 않습니다. 대신, 내용 크기가 스크롤이 필요 없을 정도로 작을 때만 반동을 비활성화하는 것이 좋습니다.\n\nScrollView 반동을 개별적으로 설정하려면, 내용의 크기에 기반하여 반동 설정이 가능합니다. 별도의 VStack에 반동 설정을 적용할 경우 내부의 ScrollView까지 영향을 미칩니다. 특정한 축, 예를 들어 수평 스크롤에만 반동을 적용하고 싶을 때는 `.horizontal` 인수를 사용할 수 있습니다.\n\n결론적으로 사용자가 뷰의 끝에 도달했다는 것을 이해할 수 있도록 내용 크기에 따라 ScrollView 반동을 적절하게 설정하는 것이 이상적입니다. \n\n키워드: SwiftUI, ScrollView, 반동 설정, 내용 크기, 축 설정"},{"comments":"흔한 모델을 만드는 예시 코드에서 끝은 아니고, Observable을 사용하면서 프로토콜로 추상화해서 sync 방식과 async 방식까지 지원하는 방법을 설명합니다. ","summary":"","title":"SwiftUI View Models: A Polymorphic Approach | by Luis Recuenco ","location":"https:\/\/medium.com\/the-swift-cooperative\/swiftui-view-models-a-polymorphic-approach-8911a992892b","keywords":["SwiftUI","pick"]},{"title":"SwiftUI main thread hang detector – Wade Tregaskis","keywords":["SwiftUI","영어"],"comments":"","summary":"","location":"https:\/\/wadetregaskis.com\/swiftui-main-thread-hang-detector\/?"},{"location":"https:\/\/doctorow.medium.com\/the-cult-of-mac-fefa9b331808","keywords":["Culture"],"title":"The Cult of Mac | by Cory Doctorow ","summary":"애플의 가장 귀중한 무형 자산은 특허나 저작권이 아니라, 자신들이 애플의 주주 이익과 동일한 정체성을 가진 억압받는 종교적 소수자의 일부라고 믿는 사람들의 군대다. 앱 스토어의 경우, 애플은 제3자가 독자적인 앱 스토어를 제공하는 것을 막아 서비스 제공이 불가능하게 만들고, 앱 판매에서 30%의 수수료를 취함으로써 독점적 이점을 가진다. 뉴스 미디어 같은 업계는 빅테크로부터 크게 손해를 보고 있다. 규제기관은 이 기술 중심의 봉건주의에 대한 위험성을 인지하고 조치를 취하고 있다.\n\n애플에 대한 충성이 거의 종교적 신념화된 소수의 애플 사용자들은 애플 고객이 다른 앱 스토어를 원하지 않는다고 주장하나, 이는 말이 안 되는 주장이다. 만약 애플 고객들이 원하지 않는다면 애플은 기술 방해나 법적 위협을 사용하여 제3자 앱 스토어의 존재를 막을 필요가 없을 것이다. 캐나다의 정치인들조차 이러한 행태에 말려 들어, 소비자가 아닌 기업의 이익을 보호해야 한다고 주장하였다.\n\n애플의 수리 방해 의혹도 이어지고 있다. 애플은 독립적인 수리가 가능해지면 자사 제품의 수리보다는 교체를 유도하여 더 많은 수익을 얻으려 한다는 의심을 받고 있다. 아울러 애플은 개인의 사생활을 보호하고 보안을 제공한다고 주장하지만, 이는 종종 자신들의 이익을 위해 희생될 때가 있다. 예를 들어 iMessage는 애플 사용자 간에만 종단 간 암호화를 제공하지만, 안드로이드 사용자가 포함된 대화는 모두 SMS를 통해 이루어져 보안에 큰 구멍이 생기게 된다.\n\n애플은 고객들에게 보안 문제를 해결해 준 Beeper Mini 같은 서드파티 앱의 사용을 방해함으로써 사실상 고객의 안전과 사생활을 뒤로 한 채 이익만을 추구하는 모습을 보여주었다. 이러한 문제에도 불구하고, 애플의 문제점을 실제로 장점으로 여기고 옹호하는 '맥 컬트'가 존재하며, 이것은 애플에 대한 공공의 불만이 누적되는 것을 효과적으로 방어하고 있다.\n\n주요 포인트 키워드: 애플, 앱 스토어, 수리 정책, 사생활 보호, Beeper Mini, 맥 컬트","comments":"애플 팬 문화 - 맥 컬트에 대해 이야기합니다. 제목은 맥 컬트지만 iOS를 중심으로 앱 스토어 독점에 동의하는 것이 애플 브랜드에 충성하는 종교적인 신념에 기반한 것처럼 정의합니다. 여러 사례 기사들을 언급하면서 프라이버시와 보안 명분 아래 동조한다고 말합니다. 모든 분야와 문화가 그렇지 않던가요? ㅎㅎ"},{"location":"https:\/\/medium.com\/macoclock\/the-genius-of-apple-pay-84162710e79c","comments":"애플 페이가 단지 간편 결제가 아니라는 이야기를 합니다. 특히 결제 과정과 분실시 안전성과 보안성을 설명하는 부분이 인상적입니다. ","title":"The Genius of Apple Pay. Transforming Mobile Payments | by Jason Benskin ","summary":"애플 페이는 단순한 디지털 지갑이 아니라, 금융 거래의 미래를 엿볼 수 있는 혁신적인 기술입니다. 아이폰이나 애플 워치를 이용해 가까운 매장의 비접촉 결제 단말기에 갖다 대고, 얼굴 인식(Face ID) 또는 지문 인식(Touch ID)으로 본인 확인을 함으로써 결제를 간편하게 할 수 있습니다. 애플 페이가 제공하는 보안성은 특별한 디바이스 번호와 고유한 거래 코드를 사용함으로써 카드 번호가 상점이나 자신의 기기에 저장되지 않고, 실제 카드 정보의 공유도 없이 거래가 이루어집니다.\n\n폰이나 애플 워치 분실 시에는 'Find My iPhone'을 통해 지급을 즉시 정지시킬 수 있어 금융 정보의 안전을 보증합니다. 애플 페이의 가까운 기술 향상은 포괄적인 비즈니스 변경을 요구하며, 애플 페이에 적응하지 않은 기업은 편리함과 속도, 안전성을 찾는 소비자를 잃을 위험이 있습니다. 애플 페이는 혁신적인 보안 조치와 편리한 결제 프로세스를 통해 전통적인 결제 방식의 문제점을 해결하였고, 디지털 금융 시대로의 진입을 주도하고 있습니다.\n\n요약 키워드: 애플 페이, 디지털 지갑, NFC(near field communication) 기술, 보안성, 금융 혁명.","keywords":["Culture"]},{"title":"The Top 5 Pros and Cons of SwiftUI: An In-Depth Exploration | by Rashad Shirizada ","location":"https:\/\/medium.com\/@rashadsh\/the-top-5-pros-and-cons-of-swiftui-an-in-depth-exploration-af6530cd5c55","keywords":["SwiftUI"],"comments":"몇 년째 계속해서 반복해서 나오는 장단점 비교글입니다. 물론 대신 선택해주지는 않죠 ","summary":""},{"keywords":["Culture"],"comments":"전혀 다른 영역인데 깃헙에서 Python 프로젝트 중에서 핫한 프로젝트라고 합니다. 그냥 호기심으로 볼만 합니다","summary":"","title":"Top 30 GitHub Python Projects At The Beginning Of 2024 | by Christopher Tao ","location":"https:\/\/towardsdatascience.com\/top-30-github-python-projects-at-the-beginning-of-2024-a0b84d4f8404"},{"comments":"애플 시스템 서비스 중에서 일부를 끄면 베터리를 더 오래 쓸 수 있다는 글입니다. 그렇지만 행간을 잘 읽어야 하는 것은 그것을 끄면 뭐가 안되는지, 무엇을 조심해야 하는지 언급이 부족합니다","title":"Turn Off These 14 iOS System Services Right Now For A Bigger Battery | by Nikhil Vemu ","location":"https:\/\/medium.com\/macoclock\/turn-off-these-14-ios-system-services-right-now-for-a-bigger-battery-872e902b5a72","keywords":["Culture"],"summary":""},{"summary":"","keywords":["SwiftUI","영어"],"comments":"이렇게 세밀하게 alignment 정렬시켜야 하는 경우에는 SwiftUI 장점이 퇴색되는 것 같은 느낌마저 들 때가 있습니다","location":"https:\/\/benscheirman.com\/2024\/01\/swiftui-alignment-guide.html?","title":"Unfuddling the SwiftUI Alignment Guide API | Ben Scheirman"},{"location":"https:\/\/developer.apple.com\/support\/dma-and-apps-in-the-eu","title":"Update on apps distributed in the European Union - Support - Apple Developer","keywords":["APPLE"],"comments":"EU쪽 DMA 법 규제로 인해서 iOS, 사파리, 앱 스토어에 변경 사항이 제법있습니다. 3월 이후 적용된다고 하구요 참고로 해당 문서는 아직 한국어 번역은 없습니다.","summary":"애플은 유럽연합(EU) 내 개발자들의 앱에 영향을 미치는 iOS, Safari, 그리고 App Store에 대한 변경 사항을 공유하고 있습니다. 이는 디지털 시장 법안(DMA)의 준수를 위한 것으로, 개발자들에게 iOS에서 앱을 배포하고 결제를 처리하는 새로운 방법과 WebKit 이외의 웹 브라우저 엔진을 사용할 수 있는 권한, 아이폰 및 iOS 기능과의 상호운용성 요청, 앱과 사용자 데이터에 대한 추가적인 분석 도구와 데이터 이전 권한을 포함합니다.\n\n개발자들은 2024년 3월부터 Xcode 15.3 베타 버전과 iOS 17.4를 통해 이러한 변경 사항을 사용할 수 있게 됩니다. 이러한 변경 사항은 EU 회원국에서 앱을 배포하는 개발자에게만 적용되며, 기존 App Store의 방식을 유지하고 싶은 개발자는 아무 조치를 취할 필요가 없습니다. 그러나 다양한 새로운 위험이 존재하며, 애플은 유럽의 사용자들에게 가능한 최상의 경험을 제공하기 위해 보호 조치를 도입할 계획입니다.\n\n이러한 변경 사항에는 대체 앱 마켓플레이스에서 iOS 앱을 배포할 새로운 옵션, 웹 브라우저 선택의 확대, 무선결제 기능에 대한 API 제공, 디폴트 앱 설정의 확장 등이 포함됩니다. 또한 앱 개발자는 App Store에서의 대체 결제 수단을 활용할 수 있으며, 더 많은 앱 분석 리포트와 사용자 데이터의 이동성을 제공합니다. 개발자들은 대체 배포 및 결제 조건에 대한 새로운 비즈니스 조건을 선택할 수 있습니다.\n\n키워드:\n- 애플(Apple)\n- 유럽연합(EU)\n- 디지털 시장 법안(DMA)\n- iOS, Safari, App Store 변경 사항\n- 대체 앱 분배와 결제\n- 웹 브라우저 엔진 및 무선결제 API\n- 보안 및 개인정보 보호"},{"summary":"애플의 새로운 제품 Vision Pro 출시를 앞두고 개발자 커뮤니티에서 많은 기대가 느껴진다. 개발자들은 통상적으로 애플의 디자인 원칙과 인간 인터페이스 가이드라인(HIG)을 따르면서 사용자에게 친숙하고 간단하며 접근성이 높은 앱을 만들어왔다. 하지만 이러한 원칙을 엄격하게 따르면 앱에서 개성이 결여될 수 있다. 애플은 이러한 문제를 차별적인 UX와 색상 사용으로 잘 해결해왔고, 개발자들도 창의적인 해결책과 인터페이스 요소로 새로운 방법을 모색해 왔다.\n\n그러나 Vision Pro를 위해 만들어진 앱들은 개성이 결여되어 보인다. 스크린샷을 보면 앱들을 서로 구분하기 어려울 정도로 단조롭다. 애플은 3D 인터페이스 설계 시 가진 문제점을 피하도록 개발자들을 안내했지만, 이로 인해 개별적으로 멋지지만 집합적으로는 큰 인상을 주지 못하는 앱들을 만들게 했다. 대형 플레이어들조차 출시에 앱을 내놓지 않아 개발자들로부터 그 기대치를 충족하기 힘들었다는 의구심을 낳았다.\n\n앱 개발자들 대부분이 단지 시뮬레이터만을 가지고 작업했다는 점, 출시 날짜의 불확실성, 그리고 출시 초기에 미국 시장에만 제한적으로 제공될 것이라는 점 등은 개발에 어려움을 주었다. 작가는 앞으로 몇 달 안에 사용자 경험을 넘어서는 혁신을 개발자들이 보여줄 것이라는 희망을 가지고 있으며, 해당 커뮤니티의 창의성을 기대하고 있다.\n\n요약 핵심 포인트 키워드: 애플 Vision Pro 출시 예정, 개발자들의 기대감과 우려, 앱의 개성 부족, 3D 인터페이스 디자인 문제, 사용자 경험의 혁신 가능성.","location":"https:\/\/buttondown.email\/varrall\/archive\/vision-pro-apps-look-boring\/?","keywords":["VisionOS","영어","pick"],"title":"Vision Pro Apps look boring • Buttondown","comments":"다음주부터 비전 프로 첫 물량들이 배송될 텐데 아직까지는 초기 앱이 많지 않을 것 같다. 그리고 그마저도 앱들이 시뮬레이터에서만 작업하기 때문에 지루할 정도로 비슷하고 특색이 없다는 내용입니다. "},{"summary":"","keywords":["Culture"],"location":"https:\/\/mikaelvesavuori.medium.com\/which-is-cheaper-serverless-or-servers-1b18816ce7f6","comments":"이걸 넣을까 말까 계속 고민했는데 관심있는 분들만 읽어보시라고 넣었습니다","title":"Which is Cheaper: Serverless or Servers? | by Mikael Vesavuori "},{"location":"https:\/\/medium.com\/macoclock\/why-freeform-is-the-most-misunderstood-app-from-apple-593d9aacd1b0","summary":"저자는 사람들이 애플의 최신 앱 Freeform을 오해하고 있다고 주장합니다. 2022년 말에 출시된 이 앱은 유연한 디지털 화이트보드로 마케팅되었지만, 애플 제품에서 기대할 법한 주목을 받지 못하고 있습니다. 사용자들과 함께 협업하는 데에 유용한 Freeform은 아이폰, 아이패드, 맥 등 다양한 애플 디바이스에서 프로젝트 계획, 생각 정리, 동료들과 협업 등 다양한 목적으로 활용될 수 있습니다. 무한 대화면은 공간 제약 없이 아이디어를 펼치는 데 도움을 주며, 다양한 파일 유형을 지원하고 최대 100명과의 실시간 협업, 페이스타임과 아이메시지 통합 등의 특징을 가지고 있습니다.\n\n그러나 Freeform은 애플의 심플한 디자인 철학으로 인해 그 기능을 과소평가받는 경향이 있으며, 아이패드와 애플 펜슬에 최적화 되어 있어 다른 디바이스 이용자들에겐 접근성이 낮을 수 있습니다. 특화된 다른 앱들과 비교될 때 그 가치가 과소평가되었지만,협업과 창의적 작업 흐름을 강화하는 데 Freeform은 큰 잠재력을 가지고 있습니다. 어쩌면 모든 애플 기기를 소유하고 있는 이용자들에게 더 유용할 수 있으니 모든 사용자들이 이 앱의 기능을 탐색하고 활용해보는 것이 권장됩니다.\n\n요약 키워드: #Freeform #애플 #디지털화이트보드 #협업툴 #사용자오해","title":"Why Freeform Is the Most Misunderstood App From Apple | by The Useful Tech ","comments":"Freeform 앱을 사람들이 무시하거나 잘 모르고 있다는 취지입니다. 저도 써보면 아이패드와 펜슬을 쓰는 환경에서는 정말 좋던데, 아이폰이나 맥에서는 제약이 많아서 불편하더군요","keywords":["Culture"]},{"summary":"","keywords":["DeveloperTools"],"location":"https:\/\/medium.com\/@salgarayes\/xcode-build-system-everything-everywhere-all-at-once-a5ab73205269","comments":"새로운 기능이나 내용을 것을 정리한 것은 아니고, Xcode 빌드 시스템 동작 흐름을 요소별로 잘 설명해준 것 같습니다. 그림과 글씨는 좀 마음에 안들지만요 :) ","title":"Xcode Build System: Everything Everywhere All at Once | by Yeskendir Salgara "},{"comments":"재밌는 오픈소스라서 가져와 봤습니다. 터치하거나 제스처에 손 모양 그림자를 그려주는 오픈소스입니다 ㅎㅎ","keywords":["OpenSources"],"title":"adamwulf\/HandShadows: Add shadows to your gestures for better demo videos of your app","summary":"","location":"https:\/\/github.com\/adamwulf\/HandShadows"},{"keywords":["Hardware"],"location":"https:\/\/medium.com\/macoclock\/iphone-15-pro-max-a-real-camera-killer-8c5553894d8a","title":"iPhone 15 Pro Max — a real camera killer | by David Lewis ","comments":"아이폰 14 Pro 부터 ProRes 방식으로 촬영하면 라이트닝 케이블로 옮기기 불편했지만, 15 Pro 부터는 USB-C 방식이라서 외장 하드를 연결해서 촬영하기 너무 편하다는 얘기를 많이 듣습니다. 앞으로 USB-C로 주변기기 확장성으로 활용할 곳이 많아질 것 같네요","summary":""},{"summary":"","keywords":["OpenSources"],"location":"https:\/\/github.com\/waydabber\/BetterDisplay\/","comments":"애플 기본 디스플레이 설정에서 제공해 주지 않는 세밀한 옵션을 지정할 수 있는 BetterDisplay 오픈소스입니다. 프로 버전은 유료로 판매하고 있긴 합니다","title":"waydabber\/BetterDisplay | GitHub"}],"releaseAt":726850800,"version":"1.0"}